[{"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\index.js":"1","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\App.js":"2","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\reportWebVitals.js":"3","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MoviesComp.js":"4","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Redux\\reducer.js":"5","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\movieUtil.js":"6","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompA.js":"7","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompB.js":"8","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompC.js":"9","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\WelcomeComp.js":"10","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\LoginComp.js":"11","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\MainComp.js":"12","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\usersUtil.js":"13","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\HeaderComp.js":"14","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\AddUserComp.js":"15","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\CreateAccountComp.js":"16","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\customField\\PermossionComp.js":"17","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\customField\\PermossionComp1.js":"18","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UsersComp.js":"19","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UserComp.js":"20","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\EditUserComp.js":"21","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MovieComp.js":"22","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\menu\\UserMenu.js":"23","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\AddMovieComp.js":"24","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\EditMovieComp.js":"25","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\menu\\MovieMenu.js":"26","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\menu\\MemberMenu.js":"27","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MemberComp.js":"28","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\EditMemberComp.js":"29","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\AddMemberComp.js":"30","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\membersUtil.js":"31","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\SubscriptionsUtil.js":"32","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MembersSubscriptionsComp.js":"33","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MemberSubscriptionsComp.js":"34","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\subscriptionsUtil.js":"35","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\SubscribeToMovieComp.js":"36"},{"size":1923,"mtime":1618867657335,"results":"37","hashOfConfig":"38"},{"size":4429,"mtime":1619516977625,"results":"39","hashOfConfig":"38"},{"size":375,"mtime":1615301173254,"results":"40","hashOfConfig":"38"},{"size":1339,"mtime":1619517459204,"results":"41","hashOfConfig":"38"},{"size":7539,"mtime":1619508091497,"results":"42","hashOfConfig":"38"},{"size":1274,"mtime":1617862504719,"results":"43","hashOfConfig":"38"},{"size":630,"mtime":1612455879221,"results":"44","hashOfConfig":"38"},{"size":341,"mtime":1612423971804,"results":"45","hashOfConfig":"38"},{"size":346,"mtime":1612455798597,"results":"46","hashOfConfig":"38"},{"size":397,"mtime":1615301173246,"results":"47","hashOfConfig":"38"},{"size":2381,"mtime":1615301173245,"results":"48","hashOfConfig":"38"},{"size":768,"mtime":1615998903141,"results":"49","hashOfConfig":"38"},{"size":1209,"mtime":1615726984107,"results":"50","hashOfConfig":"38"},{"size":666,"mtime":1615301173245,"results":"51","hashOfConfig":"38"},{"size":11398,"mtime":1617888027602,"results":"52","hashOfConfig":"38"},{"size":1452,"mtime":1615301173250,"results":"53","hashOfConfig":"38"},{"size":1413,"mtime":1615301173247,"results":"54","hashOfConfig":"38"},{"size":1265,"mtime":1615301173247,"results":"55","hashOfConfig":"38"},{"size":677,"mtime":1615888521687,"results":"56","hashOfConfig":"38"},{"size":1697,"mtime":1615888342762,"results":"57","hashOfConfig":"38"},{"size":12047,"mtime":1617778713759,"results":"58","hashOfConfig":"38"},{"size":1242,"mtime":1619526090167,"results":"59","hashOfConfig":"38"},{"size":543,"mtime":1615888521687,"results":"60","hashOfConfig":"38"},{"size":5468,"mtime":1618920597119,"results":"61","hashOfConfig":"38"},{"size":6639,"mtime":1619525875064,"results":"62","hashOfConfig":"38"},{"size":553,"mtime":1615888593443,"results":"63","hashOfConfig":"38"},{"size":573,"mtime":1617884633549,"results":"64","hashOfConfig":"38"},{"size":756,"mtime":1618220835199,"results":"65","hashOfConfig":"38"},{"size":4068,"mtime":1618813267908,"results":"66","hashOfConfig":"38"},{"size":3366,"mtime":1618732169847,"results":"67","hashOfConfig":"38"},{"size":1321,"mtime":1618813267909,"results":"68","hashOfConfig":"38"},{"size":3548,"mtime":1618216894768,"results":"69","hashOfConfig":"38"},{"size":1016,"mtime":1618825587361,"results":"70","hashOfConfig":"38"},{"size":2632,"mtime":1619512042434,"results":"71","hashOfConfig":"38"},{"size":3691,"mtime":1619510561717,"results":"72","hashOfConfig":"38"},{"size":4878,"mtime":1619504540755,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"1221art",{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"77"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"77"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"77"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"77"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"77"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\index.js",["164","165"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from '../src/Redux/reducer';\r\n\r\nimport { createMigrate, persistStore, persistReducer } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel1 from 'redux-persist/es/stateReconciler/autoMergeLevel1';\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport hardSet from 'redux-persist/es/stateReconciler/hardSet';\r\n\r\nimport { BrowserRouter} from 'react-router-dom';\r\n\r\n\r\n\r\nconst migration = {\r\n  0: (state) =>{\r\n    return {\r\n      ...state, \r\n      device: undefined\r\n    }\r\n  },\r\n  1: (state) =>{\r\n    return {\r\n      device: state.device\r\n    }\r\n  }\r\n}\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage, // which reducer want to store\r\n  version: 1,\r\n  stateReconciler: autoMergeLevel1, \r\n  migrate: createMigrate(migration, {debug: false}),\r\n  /*(state) =>{\r\n    console.log('************************************************************');\r\n    return Promise.resolve(state);\r\n  }*/\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducer);\r\n\r\nconst appStore = createStore(pReducer);\r\nconst persistor = persistStore(appStore);\r\n\r\nReactDOM.render(\r\n  <Provider store={ appStore }>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <BrowserRouter >\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["166","167"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\App.js",["168","169"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\reportWebVitals.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MoviesComp.js",["170","171"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Redux\\reducer.js",["172","173"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\movieUtil.js",["174"],"import axios from 'axios';\r\n\r\nconst moviesUrl = 'http://localhost:5000/api/movies/';\r\n                   \r\nconst loadMovies = async() =>{\r\n    let resp = await axios.get(moviesUrl);\r\n    return resp.data;\r\n}\r\n\r\nconst addMovie = async (newMovie) =>{\r\n    let resp = {};\r\n    try{\r\n        resp = await axios.post(moviesUrl, newMovie);\r\n        \r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to add new movie: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to add new movie'\r\n        }\r\n\r\n        console.log(resp.data)\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nconst updateMovie = async (updatedMovie) =>{\r\n    let resp = {};\r\n    \r\n    try{\r\n        resp = await axios.put(moviesUrl, updatedMovie);\r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to update movie: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to update movie'\r\n        }\r\n\r\n        //console.log(resp.data)\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nconst deleteMovie = async (id) =>{\r\n    let resp = await axios.delete(`${moviesUrl}${id}`);\r\n    return resp.data;\r\n}\r\n\r\nexport default { loadMovies, addMovie, updateMovie, deleteMovie };","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompA.js",["175"],"import React  from 'react';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport CompB from '../Components/CompB'\r\nimport CompC from '../Components/CompC'\r\n\r\nfunction CompA(props) {\r\n    const dispatch = useDispatch();\r\n    \r\n      \r\n     \r\n    return (\r\n        \r\n      <div className=\"App\">\r\n    \r\nComp A\r\n        <div>\r\n     \r\n        <button onClick={ () =>{\r\n            console.log(\"in counter\")\r\n            dispatch({\r\n                type : \"LoadData\"\r\n            })\r\n        } }>+</button>\r\n\r\n        <br/>\r\n\r\n        <CompC/>\r\n\r\n        </div>\r\n    \r\n\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default CompA;",["176","177"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompB.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompC.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\WelcomeComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\LoginComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\MainComp.js",["178"],"import React from 'react';\r\n\r\nimport usersUtil from '../Utils/usersUtil';\r\n\r\nimport Header from '../Components/HeaderComp';\r\nimport Movies from '../Components/movies/MoviesComp';\r\n\r\nfunction MainComp() {\r\n\r\n async function test(){\r\n    let token = sessionStorage.getItem(\"user\");\r\n    /*let test ={\r\n      foo: \"foo\"\r\n  }*/\r\n\r\n  let resp = await usersUtil.test(token);\r\n  \r\n  if(resp.success){\r\n      console({resp})\r\n  }\r\n  else{\r\n    console.log(\"ERRor\")\r\n  }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {sessionStorage.getItem(\"userName\") ? <Header userName={sessionStorage.getItem(\"userName\")}/> : ''}\r\n      <h1>Main page</h1>\r\n\r\n\r\n\r\n\r\n<button type=\"button\" onClick={test} >test</button>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n  \r\n  export default MainComp;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\usersUtil.js",["179"],"import axios from 'axios';\r\nconst usersUrl = \"http://localhost:5000/api/users/\";\r\n\r\nconst login = async (userLogin) =>{\r\n    console.log(userLogin)    \r\n    let resp = await axios.post(`${usersUrl}login`, userLogin);\r\n//console.log(resp)\r\n    return resp.data;\r\n}\r\n\r\nconst createAccount = async (createdUser) =>{\r\n    let resp = await axios.post(`${usersUrl}createAccount`, createdUser);\r\n    return resp.data;\r\n}\r\n\r\nconst addUser = async (newUser) =>{\r\n    let resp = await axios.post(`${usersUrl}add`, newUser);\r\n    return resp.data;\r\n}\r\n\r\nconst deleteUser = async (id) =>{\r\n    let resp = await axios.delete(`${usersUrl}${id}`);\r\n    return resp.data;\r\n}\r\n\r\nconst updateUser = async(updatedUser) =>{\r\n    let resp = await axios.put(usersUrl, updatedUser);\r\n    return resp.data;\r\n}\r\n\r\nconst getUsers = async () =>{\r\n    let resp = await axios.get(`${usersUrl}`);\r\n    return resp.data;\r\n}\r\n\r\n\r\n\r\nconst test = async (token) =>{\r\n\r\n   // console.log(test)    \r\n    let resp = await axios.post(`${usersUrl}test`, token, {headers: {\"Authorization\" : `Bearer ${token}`}});\r\n//console.log(resp)\r\n    return resp.data;\r\n}\r\n\r\nexport default {login, createAccount, addUser, test, getUsers, deleteUser, updateUser};","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\HeaderComp.js",["180","181"],"import React, { useState, useEffect } from 'react'\r\nimport './HeaderComp.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction HeaderComp(props){\r\n    \r\n    return(\r\n        <div>\r\n            <ul>\r\n                <li>logo</li>&nbsp;&nbsp;\r\n                <li><Link to='movies'>Movies</Link></li>&nbsp;&nbsp;\r\n                <li><Link to='subscriptions'>Subscriptions</Link></li>&nbsp;&nbsp;\r\n                <li><Link to='users'>User's Management</Link></li>&nbsp;&nbsp;\r\n                <li>{props.userFullName !== '' ? `Hello ${props.userFullName}` : ''}</li>&nbsp;&nbsp;\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderComp;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\AddUserComp.js",["182"],"import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport UserMenu from './menu/UserMenu';\r\nimport usersUtil from '../../Utils/usersUtil';\r\n\r\nfunction AddUserComp() {\r\n    //const [msg, setMsg] = useState('');\r\n    const msg = useSelector(state => state.msg);\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        /*enableReinitialize : true,*/\r\n        \r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            sessionTimeOut: 0,\r\n            permissions: [],\r\n        },\r\n        validationSchema: Yup.object({\r\n            firstName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            lastName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            username: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(10, 'Too Long!')\r\n              .required('Required'),\r\n            sessionTimeOut: Yup.number()\r\n              .min(1, 'Must be more than 0 sec')\r\n              .max(60, 'Must be less than 60 sec')\r\n              .integer()\r\n              .positive()\r\n              .required('Required'),\r\n            permissions: Yup.array().min(1, 'Choose at list one permission')\r\n            \r\n            \r\n            }),\r\n        onSubmit: async (values) => {\r\n            let resp = await usersUtil.addUser(values);\r\n\r\n            if(resp.success){\r\n                values.id = resp.id;\r\n                \r\n                dispatch({\r\n                    type: \"AddUser\",\r\n                    payload: values\r\n                })\r\n\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n\r\n                history.push('/users');\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n            }\r\n            \r\n            // setMsg(resp.msg);\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) =>{\r\n        formik.handleChange(e);\r\n        const {name, checked, value} = e.target;\r\n        let userPermissions = formik.values.permissions;\r\n\r\n       // console.log('name, checked' , name, checked, value);\r\n      //  console.log('values' , formik.values);\r\n\r\n        if(name === 'createSubscriptions' || name === 'deleteSubscriptions' || name === 'updateSubscriptions'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n\r\n                if(!userPermissions.includes('View Subscriptions')){\r\n                    userPermissions = [...userPermissions, 'View Subscriptions'];\r\n                }\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p !== value);\r\n                if(!userPermissions.includes('Create Subscriptions') && !userPermissions.includes('Delete Subscriptions') && !userPermissions.includes('Update Subscriptions')){\r\n                    userPermissions = userPermissions.filter(p => p !== 'View Subscriptions');\r\n                }\r\n            }\r\n        }\r\n        else if(name === 'createMovies' || name === 'deleteMovies' || name === 'updateMovies'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n\r\n                if(!userPermissions.includes('View Movies')){\r\n                    userPermissions = [...userPermissions, 'View Movies'];\r\n                }\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p !== value);\r\n                if(!userPermissions.includes('Create Movies') && !userPermissions.includes('Delete Movies') && !userPermissions.includes('Update Movies')){\r\n                    userPermissions = userPermissions.filter(p => p !== 'View Movies');\r\n                }\r\n            }\r\n        }\r\n        else if(name === 'viewSubscriptions'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p.indexOf('S') === -1);\r\n            }\r\n        }\r\n        else if(name === 'viewMovies'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p.indexOf('M') === -1);\r\n            }\r\n        }\r\n\r\n        formik.setFieldValue('permissions', userPermissions);\r\n       // console.log('values' , formik.values);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n             <UserMenu/>\r\n            {msg}\r\n            <form onSubmit={formik.handleSubmit}>\r\n                \r\n                <label htmlFor='firstName'>First Name</label>\r\n                <input\r\n                    id='firstName'\r\n                    name='firstName'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.firstName}\r\n                />\r\n                {formik.touched.firstName && formik.errors.firstName ? (\r\n                    <div>{formik.errors.firstName}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='lastName'>Last Name</label>\r\n                <input\r\n                    id='lastName'\r\n                    name='lastName'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.lastName}\r\n                />\r\n                {formik.touched.lastName && formik.errors.lastName ? (\r\n                    <div>{formik.errors.lastName}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='userName'>UserName</label>\r\n                <input\r\n                    id='username'\r\n                    name='username'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.username}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                    <div>{formik.errors.username}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='sessionTimeOut'>Session Time Out</label>\r\n                <input\r\n                    id='sessionTimeOut'\r\n                    name='sessionTimeOut'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.sessionTimeOut}\r\n                />\r\n                {formik.touched.sessionTimeOut && formik.errors.sessionTimeOut ? (\r\n                    <div>{formik.errors.sessionTimeOut}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n\r\n                Permission: <br/>\r\n                    \r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={formik.values.permissions.includes('View Subscriptions')}  onChange={handleChange} id='viewSubscriptions' name='viewSubscriptions' value='View Subscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='View Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={formik.values.permissions.includes('Create Subscriptions')} onChange={handleChange} id='createSubscriptions' name='createSubscriptions' value='Create Subscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Create Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={formik.values.permissions.includes('Delete Subscriptions')} onChange={handleChange} id='deleteSubscriptions' name='deleteSubscriptions' value='Delete Subscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Delete Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={formik.values.permissions.includes('Update Subscriptions')} onChange={handleChange} id='updateSubscriptions' name='updateSubscriptions' value='Update Subscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Update Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={formik.values.permissions.includes('View Movies')} onChange={handleChange} id='viewMovies' name='viewMovies' value='View Movies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='View Movies'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={formik.values.permissions.includes('Create Movies')} onChange={handleChange} id='createMovies' name='createMovies' value='Create Movies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Create Movies'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={formik.values.permissions.includes('Delete Movies')} onChange={handleChange} id='deleteMovies' name='deleteMovies' value='Delete Movies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Delete Movies'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={formik.values.permissions.includes('Update Movies')} onChange={handleChange} id='updateMovies' name='updateMovies' value='Update Movies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Update Movies'\r\n                    />\r\n                </FormGroup>\r\n                \r\n                {formik.touched.permissions && formik.errors.permissions ? (\r\n                    <div>{formik.errors.permissions}</div>\r\n                ) : null}\r\n\r\n                <button type='submit'>Submit</button>\r\n                <button><Link to=\"/users\">Cancel</Link></button>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default AddUserComp;\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\CreateAccountComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\customField\\PermossionComp.js",["183"],"import React from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { computeHeadingLevel } from '@testing-library/react';\r\n\r\n\r\nfunction PermossionComp(props) {\r\n\r\n    const handleChange = (checked) =>{\r\n        console.log(checked)\r\n    }\r\n   \r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                checked: [],\r\n            }}\r\n            onSubmit={(values) => {\r\n                alert(values.checked);\r\n            }}\r\n            \r\n        >\r\n            \r\n        {({ values, onChange }) => (\r\n            \r\n            <Form>\r\n               \r\n                <div id=\"checkbox-group\">Checked</div>\r\n                <div role=\"group\" aria-labelledby=\"checkbox-group\"  >\r\n                    <label>\r\n                    <Field type=\"checkbox\" name=\"checked\" value=\"One\" handleChange={handleChange} />\r\n                    One\r\n                    </label>\r\n                    <label>\r\n                    <Field type=\"checkbox\" name=\"checked\" value=\"Two\" />\r\n                    Two\r\n                    </label>\r\n                    <label>\r\n                    <Field type=\"checkbox\" name=\"checked\" value=\"Three\" />\r\n                    Three\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\">Submit</button>\r\n\r\n            </Form>\r\n        )}\r\n            \r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default PermossionComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\customField\\PermossionComp1.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UsersComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UserComp.js",["184","185"],"import React, {useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport usersUtil from '../../Utils/usersUtil';\r\n\r\nimport './UserComp.css';\r\n\r\nfunction UserComp(props) {\r\n    const [msg, setMsg] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteUser = async (id) =>{\r\n        let response = await usersUtil.deleteUser(id);\r\n        if(response.success){\r\n            dispatch({\r\n                type: \"DeleteUser\",\r\n                payload: id\r\n            })\r\n        }\r\n        else{\r\n            dispatch({\r\n                type: \"UpdateMsg\",\r\n                payload: response.msg\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        \r\n        <div className='user'>\r\n            name: {props.user.firstName} {props.user.lastName}<br/>\r\n            usernme: {props.user.username}<br/>\r\n            SessionTimeout: {props.user.sessionTimeOut}<br/>\r\n            Created Date : {props.user.createdDate}<br/>\r\n            permissions : \r\n            {\r\n                props.user.permissions.map((p, i) =>{\r\n                    let permissionLen = props.user.permissions.length;\r\n                    if(i !== permissionLen-1){\r\n                        return (' ' + p + ',');\r\n                    }\r\n                    else{\r\n                        return (' ' + p);\r\n                    }\r\n                    \r\n                })\r\n            }\r\n            <br/>\r\n            \r\n            <button><Link to={`/user/${props.user.id}`}>Edit</Link></button>\r\n            <input type=\"button\" value=\"Delete\" onClick={() => deleteUser(props.user.id)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\EditUserComp.js",["186"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport UserMenu from './menu/UserMenu';\r\nimport usersUtil from '../../Utils/usersUtil';\r\n\r\nfunction EditUserComp(props) {\r\n    const [user, setUser] = useState(null);\r\n    const users = useSelector(state => state.users);\r\n    const msg = useSelector(state => state.msg);\r\n\r\n    useEffect(() => {\r\n        let userId = props.match.params.id;\r\n        let user = users.filter(u => u.id === userId)[0];\r\n\r\n        let fields = ['firstName', 'lastName', 'username', 'sessionTimeOut', 'permissions'];\r\n\r\n        fields.forEach(field => formik.setFieldValue(field, user[field]));\r\n\r\n        setUser(user);\r\n        \r\n    }, [])\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        \r\n        initialValues: {\r\n            firstName: user ? user.firstName : '',\r\n            lastName: user ? user.lastName : '',\r\n            username: user ? user.username : '',\r\n            sessionTimeOut: user ? user.sessionTimeOut : 0,\r\n            permissions: user ? user.permissions: [],\r\n        },\r\n        validationSchema: Yup.object({\r\n            firstName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            lastName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            username: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(10, 'Too Long!')\r\n              .required('Required'),\r\n            sessionTimeOut: Yup.number()\r\n              .min(1, 'Must be more than 0 sec')\r\n              .max(60, 'Must be less than 60 sec')\r\n              .integer()\r\n              .positive()\r\n              .required('Required'),\r\n            permissions: Yup.array().min(1, 'Choose at list one permission')\r\n            }),\r\n        onSubmit: async (values) => {\r\n            let updatedUser = {\r\n                'id': user.id,\r\n                'firstName' : values.firstName,\r\n                'lastName' : values.lastName,\r\n                'username' : values.username,\r\n                'sessionTimeOut' : values.sessionTimeOut,\r\n                'permissions' : values.permissions\r\n            }\r\n\r\n            let resp = await usersUtil.updateUser(updatedUser);\r\n\r\n            if(resp.success){\r\n                dispatch({\r\n                    type: \"UpdateUser\",\r\n                    payload: updatedUser\r\n                })\r\n\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n\r\n                history.push('/users');\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n            }\r\n            \r\n        },\r\n    });\r\n\r\n    const handleChange = (e) =>{\r\n        formik.handleChange(e);\r\n        const {name, checked, value} = e.target;\r\n        let userPermissions = formik.values.permissions;\r\n\r\n        if(name === 'createSubscriptions' || name === 'deleteSubscriptions' || name === 'updateSubscriptions'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n\r\n                if(!userPermissions.includes('View Subscriptions')){\r\n                    userPermissions = [...userPermissions, 'View Subscriptions'];\r\n                }\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p !== value);\r\n                if(!userPermissions.includes('Create Subscriptions') && !userPermissions.includes('Delete Subscriptions') && !userPermissions.includes('Update Subscriptions')){\r\n                    userPermissions = userPermissions.filter(p => p !== 'View Subscriptions');\r\n                }\r\n            }\r\n        }\r\n        else if(name === 'createMovies' || name === 'deleteMovies' || name === 'updateMovies'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n\r\n                if(!userPermissions.includes('View Movies')){\r\n                    userPermissions = [...userPermissions, 'View Movies'];\r\n                }\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p !== value);\r\n                if(!userPermissions.includes('Create Movies') && !userPermissions.includes('Delete Movies') && !userPermissions.includes('Update Movies')){\r\n                    userPermissions = userPermissions.filter(p => p !== 'View Movies');\r\n                }\r\n            }\r\n        }\r\n        else if(name === 'viewSubscriptions'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p.indexOf('S') === -1);\r\n            }\r\n        }\r\n        else if(name === 'viewMovies'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p.indexOf('M') === -1);\r\n            }\r\n        }\r\n\r\n        formik.setFieldValue('permissions', userPermissions);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n             <UserMenu/>\r\n             {msg}\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n            <label htmlFor='firstName'>First Name</label>\r\n                <input\r\n                    id='firstName'\r\n                    name='firstName'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.firstName}\r\n                />\r\n                {formik.touched.firstName && formik.errors.firstName ? (\r\n                    <div>{formik.errors.firstName}</div>\r\n                ) : null}\r\n                \r\n                <br/>\r\n\r\n                <label htmlFor='lastName'>Last Name</label>\r\n                <input\r\n                    id='lastName'\r\n                    name='lastName'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.lastName}\r\n                />\r\n                {formik.touched.lastName && formik.errors.lastName ? (\r\n                    <div>{formik.errors.lastName}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='username'>UserName</label>\r\n                <input\r\n                    id='username'\r\n                    name='username'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.username}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                    <div>{formik.errors.username}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='sessionTimeOut'>Session Time Out</label>\r\n                <input\r\n                    id='sessionTimeOut'\r\n                    name='sessionTimeOut'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.sessionTimeOut}\r\n                />\r\n                {formik.touched.sessionTimeOut && formik.errors.sessionTimeOut ? (\r\n                    <div>{formik.errors.sessionTimeOut}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n\r\n                Permission: <br/>\r\n                    \r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='View Subscriptions' checked={formik.values.permissions.includes('View Subscriptions')}  onChange={handleChange} id='viewSubscriptions' name='viewSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='View Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Create Subscriptions' checked={formik.values.permissions.includes('Create Subscriptions')} onChange={handleChange} id='createSubscriptions' name='createSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Create Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Delete Subscriptions' checked={formik.values.permissions.includes('Delete Subscriptions')}onChange={handleChange} id='deleteSubscriptions' name='deleteSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Delete Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Update Subscriptions' checked={formik.values.permissions.includes('Update Subscriptions')} onChange={handleChange} id='updateSubscriptions' name='updateSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Update Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='View Movies' checked={formik.values.permissions.includes('View Movies')} onChange={handleChange} id='viewMovies' name='viewMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='View Movies'\r\n                    />\r\n                    \r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Create Movies' checked={formik.values.permissions.includes('Create Movies')} onChange={handleChange} id='createMovies' name='createMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Create Movies'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Delete Movies' checked={formik.values.permissions.includes('Delete Movies')} onChange={handleChange} id='deleteMovies' name='deleteMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Delete Movies'\r\n                    />\r\n                    \r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Update Movies' checked={formik.values.permissions.includes('Update Movies')} onChange={handleChange} id='updateMovies' name='updateMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Update Movies'\r\n                    />\r\n                    \r\n                </FormGroup>\r\n                {formik.touched.permissions && formik.errors.permissions ? (\r\n                        <div>{formik.errors.permissions}</div>\r\n                    ) : null}\r\n                \r\n\r\n\r\n                <button type='submit'>Update</button>\r\n                <button><Link to=\"/users\">Cancel</Link></button>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default EditUserComp;\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MovieComp.js",["187","188","189"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\menu\\UserMenu.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\AddMovieComp.js",["190","191","192"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { userHistory, Link, useHistory } from 'react-router-dom';\r\n\r\nimport MovieMenu from './menu/MovieMenu';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport './MovieComp.css';\r\nimport moviesUtil from '../../Utils/movieUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n      \r\n    },\r\n    date: {\r\n        color: \"red\",\r\n        backgroundColor: 'white'\r\n    }\r\n  }));\r\n\r\nfunction AddMovieComp() {\r\n    const [msg, setMsg] = useState('');\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n   \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            genres: '',\r\n            imageUrl: '',\r\n            premiered: '',\r\n            \r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            genres: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            imageUrl: Yup.string()\r\n              .min(10, 'Too Short!')\r\n              .max(100, 'Too Long!')\r\n              .required('Required'),\r\n            premiered: Yup.date()\r\n              .min(new Date('01/01/1930'))\r\n              .max(new Date('01/01/2930'))                   \r\n              .required('Required'),\r\n        }),\r\n        onSubmit: async (values) => {\r\n            let genres = values.genres.split(',');\r\n            let addedMovie = {\r\n                name : values.name,\r\n                genres : genres,\r\n                image : {\r\n                    medium : values.imageUrl,\r\n                    original : ''\r\n                },\r\n                premiered : values.premiered\r\n            }\r\n\r\n            let resp = await moviesUtil.addMovie(addedMovie)\r\n            //console.log(resp.data)\r\n\r\n            if(resp.success){\r\n                addedMovie._id = resp.movieId;\r\n                \r\n                dispatch({\r\n                    type: \"AddMovie\",\r\n                    payload: addedMovie\r\n                })\r\n                formik.resetForm();\r\n                setMsg(resp.msg);\r\n\r\n                //history.push('/movies');\r\n            }\r\n            else{\r\n                setMsg(resp.msg);\r\n                \r\n            }\r\n            \r\n            // setMsg(resp.msg);\r\n        },\r\n              \r\n\r\n              \r\n\r\n    });\r\n\r\n    const handleChange = (e) =>{\r\n        formik.handleChange(e);\r\n        alert(e.target.value)\r\n        console.log(formik.values.name)\r\n        \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MovieMenu/>\r\n            {msg}\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label htmlFor=\"name\">Name</label>\r\n\r\n                <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    {...formik.getFieldProps('name')}\r\n                />\r\n\r\n              \r\n                {formik.touched.name && formik.errors.name ? (\r\n                    <div>{formik.errors.name}</div>\r\n                ) : null}\r\n\r\n                <br/>\r\n\r\n                <label htmlFor=\"genres\">Genres</label>\r\n                <input\r\n                    id=\"genres\"\r\n                    type=\"text\"\r\n                    {...formik.getFieldProps('genres')}\r\n                />\r\n                {formik.touched.genres && formik.errors.genres ? (\r\n                    <div>{formik.errors.genres}</div>\r\n                ) : null}\r\n\r\n                <br/>\r\n\r\n                <label htmlFor=\"imageUrl\">Image Url</label>\r\n                <input\r\n                    id=\"imageUrl\"\r\n                    type=\"text\"\r\n                    {...formik.getFieldProps('imageUrl')}\r\n                />\r\n                {formik.touched.imageUrl && formik.errors.imageUrl ? (\r\n                    <div>{formik.errors.imageUrl}</div>\r\n                ) : null}\r\n                \r\n                <br/>\r\n                <label htmlFor=\"premiered\">Premiered</label>\r\n\r\n                <TextField \r\n                    id=\"premiered\"\r\n                    label=\"Premiered\"\r\n                    type=\"date\"\r\n                    format={'dd/mm/yyyy'}\r\n                    onChange={formik.handleChange}\r\n                    {...formik.getFieldProps('premiered')}\r\n                    \r\n                    \r\n                    className={classes.date}\r\n                    \r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    \r\n                    \r\n                    }}\r\n                    \r\n                    \r\n                />\r\n                {formik.touched.premiered && formik.errors.premiered ? (\r\n                    <div>{formik.errors.premiered}</div>\r\n                ) : null}\r\n<br/>\r\n                <button type='submit'>Submit</button>\r\n                <button><Link to=\"/movies\">Cancel</Link></button>\r\n            </form>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddMovieComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\EditMovieComp.js",["193","194","195","196","197","198"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\menu\\MovieMenu.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\menu\\MemberMenu.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MemberComp.js",[],["199","200"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\EditMemberComp.js",["201","202","203"],"import React from 'react'\r\n\r\nfunction EditMemberComp() {\r\n    return (\r\n        <div>\r\n            Edit\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMemberComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\AddMemberComp.js",["204","205"],"import React, {useState} from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport MemberMenu from '../subscriptions/menu/MemberMenu';\r\n\r\nimport membersUtil from '../../Utils/membersUtil';\r\n\r\nfunction AddMemberComp() {\r\n    const [msg, setMsg] = useState('');\r\n    const dispatch = useDispatch();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            city: '',\r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n              .min(5, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            email: Yup.string()\r\n                .required(\"Please enter valid email\")\r\n                .matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \"Email is not valid\"),\r\n            city: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n        }),\r\n        onSubmit: async (values) => {\r\n            let addedMember = values;\r\n            let resp = await membersUtil.addMember(addedMember);\r\n            \r\n            \r\n          if(resp.success){\r\n                addedMember._id = resp.memberId;\r\n              \r\n                dispatch({\r\n                    type: \"AddMember\",\r\n                    payload: addedMember\r\n                })\r\n                formik.resetForm();\r\n                setMsg(resp.msg);\r\n            }\r\n            else{\r\n                setMsg(resp.msg);\r\n                \r\n            }\r\n        },\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n            <MemberMenu/>\r\n            {msg}\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    {...formik.getFieldProps('name')}\r\n                />\r\n                \r\n                {formik.touched.name && formik.errors.name ? (\r\n                    <div>{formik.errors.name}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n                \r\n                {formik.touched.email && formik.errors.email ? (\r\n                    <div>{formik.errors.email}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                 <label htmlFor=\"city\">City</label>\r\n                <input\r\n                    id=\"city\"\r\n                    type=\"text\"\r\n                    {...formik.getFieldProps('city')}\r\n                />\r\n                \r\n                {formik.touched.city && formik.errors.city ? (\r\n                    <div>{formik.errors.city}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <button type='submit'>Submit</button>\r\n                <button><Link to=\"/subscriptions\">Cancel</Link></button>\r\n\r\n\r\n            </form>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddMemberComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\membersUtil.js",["206"],"import axios from 'axios';\r\n\r\nconst membersUrl = 'http://localhost:5000/api/members/';\r\n                   \r\nconst loadMembers = async() =>{\r\n    let resp = await axios.get(membersUrl);\r\n    return resp.data;\r\n}\r\n\r\nconst addMember = async (newMember) =>{\r\n    let resp = {};\r\n    try{\r\n        resp = await axios.post(membersUrl, newMember);\r\n        \r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to add new member: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to add new member'\r\n        }\r\n\r\n        console.log(resp.data)\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nconst updateMember = async (updatedMember) =>{\r\n    let resp = {};\r\n    \r\n    try{\r\n        resp = await axios.put(`${membersUrl}/${updatedMember.id}`, updatedMember);\r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to update member: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to update member'\r\n        }\r\n\r\n        //console.log(resp.data)\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nconst deleteMember = async (id) =>{\r\n    let resp = await axios.delete(`${membersUrl}${id}`);\r\n    return resp.data;\r\n}\r\n\r\nexport default { loadMembers, addMember, updateMember, deleteMember };","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\SubscriptionsUtil.js",["207","208","209"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MembersSubscriptionsComp.js",["210","211","212"],"import React, {useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MemberSubscriptions from './MemberSubscriptionsComp';\r\nimport MemberMenu from './menu/MemberMenu';\r\n\r\nimport './MembersSubscriptionsComp.css';\r\nimport subscriptionsUtil from '../../Utils/subscriptionsUtil';\r\n\r\nfunction MembersSubscriptionsComp() {\r\n    const membersSubscriptions = useSelector(state => state.membersSubscriptions);\r\n    const msg = useSelector(state => state.msg)\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=''>\r\n            <MemberMenu/>\r\n            {msg}\r\n            <div className='subscribers'>\r\n                All Members Subscriptions\r\n\r\n                {\r\n                    membersSubscriptions.map(ms =>{\r\n                        return <MemberSubscriptions key={ms.id} memberSubscriptions={ms} />\r\n\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default MembersSubscriptionsComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MemberSubscriptionsComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\subscriptionsUtil.js",["213","214","215"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\SubscribeToMovieComp.js",[],{"ruleId":"216","severity":1,"message":"217","line":16,"column":8,"nodeType":"218","messageId":"219","endLine":16,"endColumn":23},{"ruleId":"216","severity":1,"message":"220","line":17,"column":8,"nodeType":"218","messageId":"219","endLine":17,"endColumn":15},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"216","severity":1,"message":"225","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":35},{"ruleId":"226","severity":1,"message":"227","line":99,"column":8,"nodeType":"228","endLine":99,"endColumn":10,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":20,"column":28,"nodeType":"232","messageId":"233","endLine":20,"endColumn":30},{"ruleId":"226","severity":1,"message":"234","line":27,"column":8,"nodeType":"228","endLine":27,"endColumn":10,"suggestions":"235"},{"ruleId":"216","severity":1,"message":"236","line":1,"column":10,"nodeType":"218","messageId":"219","endLine":1,"endColumn":13},{"ruleId":"216","severity":1,"message":"237","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":17},{"ruleId":"238","severity":1,"message":"239","line":53,"column":1,"nodeType":"240","endLine":53,"endColumn":67},{"ruleId":"216","severity":1,"message":"241","line":4,"column":8,"nodeType":"218","messageId":"219","endLine":4,"endColumn":13},{"ruleId":"221","replacedBy":"242"},{"ruleId":"223","replacedBy":"243"},{"ruleId":"216","severity":1,"message":"244","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":46,"column":1,"nodeType":"240","endLine":46,"endColumn":88},{"ruleId":"216","severity":1,"message":"225","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"245","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"225","line":1,"column":16,"nodeType":"218","messageId":"219","endLine":1,"endColumn":24},{"ruleId":"216","severity":1,"message":"246","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":29},{"ruleId":"216","severity":1,"message":"247","line":10,"column":12,"nodeType":"218","messageId":"219","endLine":10,"endColumn":15},{"ruleId":"216","severity":1,"message":"248","line":10,"column":17,"nodeType":"218","messageId":"219","endLine":10,"endColumn":23},{"ruleId":"226","severity":1,"message":"249","line":29,"column":8,"nodeType":"228","endLine":29,"endColumn":10,"suggestions":"250"},{"ruleId":"216","severity":1,"message":"251","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":18},{"ruleId":"216","severity":1,"message":"252","line":10,"column":11,"nodeType":"218","messageId":"219","endLine":10,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":33,"column":20,"nodeType":"255","endLine":33,"endColumn":77},{"ruleId":"216","severity":1,"message":"256","line":5,"column":10,"nodeType":"218","messageId":"219","endLine":5,"endColumn":21},{"ruleId":"216","severity":1,"message":"257","line":38,"column":11,"nodeType":"218","messageId":"219","endLine":38,"endColumn":18},{"ruleId":"216","severity":1,"message":"258","line":106,"column":11,"nodeType":"218","messageId":"219","endLine":106,"endColumn":23},{"ruleId":"216","severity":1,"message":"259","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":14},{"ruleId":"216","severity":1,"message":"260","line":12,"column":10,"nodeType":"218","messageId":"219","endLine":12,"endColumn":13},{"ruleId":"216","severity":1,"message":"237","line":16,"column":8,"nodeType":"218","messageId":"219","endLine":16,"endColumn":17},{"ruleId":"216","severity":1,"message":"261","line":37,"column":12,"nodeType":"218","messageId":"219","endLine":37,"endColumn":17},{"ruleId":"216","severity":1,"message":"262","line":37,"column":19,"nodeType":"218","messageId":"219","endLine":37,"endColumn":27},{"ruleId":"226","severity":1,"message":"263","line":131,"column":8,"nodeType":"228","endLine":131,"endColumn":10,"suggestions":"264"},{"ruleId":"221","replacedBy":"265"},{"ruleId":"223","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":29,"column":36,"nodeType":"269","messageId":"270","endLine":29,"endColumn":37,"suggestions":"271"},{"ruleId":"267","severity":1,"message":"268","line":29,"column":61,"nodeType":"269","messageId":"270","endLine":29,"endColumn":62,"suggestions":"272"},{"ruleId":"226","severity":1,"message":"273","line":68,"column":8,"nodeType":"228","endLine":68,"endColumn":10,"suggestions":"274"},{"ruleId":"267","severity":1,"message":"268","line":27,"column":36,"nodeType":"269","messageId":"270","endLine":27,"endColumn":37,"suggestions":"275"},{"ruleId":"267","severity":1,"message":"268","line":27,"column":61,"nodeType":"269","messageId":"270","endLine":27,"endColumn":62,"suggestions":"276"},{"ruleId":"238","severity":1,"message":"239","line":53,"column":1,"nodeType":"240","endLine":53,"endColumn":71},{"ruleId":"230","severity":1,"message":"231","line":47,"column":43,"nodeType":"232","messageId":"233","endLine":47,"endColumn":45},{"ruleId":"277","severity":1,"message":"278","line":48,"column":66,"nodeType":"279","messageId":"280","endLine":48,"endColumn":68},{"ruleId":"238","severity":1,"message":"239","line":96,"column":1,"nodeType":"240","endLine":96,"endColumn":64},{"ruleId":"216","severity":1,"message":"245","line":1,"column":16,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"281","line":8,"column":8,"nodeType":"218","messageId":"219","endLine":8,"endColumn":25},{"ruleId":"216","severity":1,"message":"252","line":13,"column":11,"nodeType":"218","messageId":"219","endLine":13,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":45,"column":43,"nodeType":"232","messageId":"233","endLine":45,"endColumn":45},{"ruleId":"277","severity":1,"message":"278","line":46,"column":66,"nodeType":"279","messageId":"280","endLine":46,"endColumn":68},{"ruleId":"238","severity":1,"message":"239","line":100,"column":1,"nodeType":"240","endLine":100,"endColumn":82},"no-unused-vars","'autoMergeLevel2' is defined but never used.","Identifier","unusedVar","'hardSet' is defined but never used.","no-native-reassign",["282"],"no-negated-in-lhs",["283"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'members.length', 'membersSubscriptions.length', 'movies.length', 'subscriptions.length', and 'users.length'. Either include them or remove the dependency array.","ArrayExpression",["284"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'movieResult' and 'props.match.params.id'. Either include them or remove the dependency array.",["285"],"'act' is defined but never used.","'movieUtil' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CompB' is defined but never used.",["282"],["283"],"'Movies' is defined but never used.","'useEffect' is defined but never used.","'computeHeadingLevel' is defined but never used.","'msg' is assigned a value but never used.","'setMsg' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formik', 'props.match.params.id', and 'users'. Either include them or remove the dependency array.",["286"],"'moviesUtil' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'userHistory' is defined but never used.","'history' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'moment' is defined but never used.","'red' is defined but never used.","'movie' is assigned a value but never used.","'setMovie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formik', 'movies', and 'props.match.params.id'. Either include them or remove the dependency array.",["287"],["282"],["283"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["288","289"],["290","291"],"React Hook useEffect has missing dependencies: 'formik', 'membersSubscriptions', and 'props.match.params.id'. Either include them or remove the dependency array.",["292"],["293","294"],["295","296"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'subscriptionsUtil' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"messageId":"305","fix":"306","desc":"307"},{"messageId":"308","fix":"309","desc":"310"},{"messageId":"305","fix":"311","desc":"307"},{"messageId":"308","fix":"312","desc":"310"},{"desc":"313","fix":"314"},{"messageId":"305","fix":"315","desc":"307"},{"messageId":"308","fix":"316","desc":"310"},{"messageId":"305","fix":"317","desc":"307"},{"messageId":"308","fix":"318","desc":"310"},"Update the dependencies array to be: [dispatch, members.length, membersSubscriptions.length, movies.length, subscriptions.length, users.length]",{"range":"319","text":"320"},"Update the dependencies array to be: [movieResult, props.match.params.id]",{"range":"321","text":"322"},"Update the dependencies array to be: [formik, props.match.params.id, users]",{"range":"323","text":"324"},"Update the dependencies array to be: [formik, movies, props.match.params.id]",{"range":"325","text":"326"},"removeEscape",{"range":"327","text":"328"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"329","text":"330"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"331","text":"328"},{"range":"332","text":"330"},"Update the dependencies array to be: [formik, membersSubscriptions, props.match.params.id]",{"range":"333","text":"334"},{"range":"335","text":"328"},{"range":"336","text":"330"},{"range":"337","text":"328"},{"range":"338","text":"330"},[3280,3282],"[dispatch, members.length, membersSubscriptions.length, movies.length, subscriptions.length, users.length]",[896,898],"[movieResult, props.match.params.id]",[1026,1028],"[formik, props.match.params.id, users]",[3914,3916],"[formik, movies, props.match.params.id]",[977,978],"",[977,977],"\\",[1002,1003],[1002,1002],[2306,2308],"[formik, membersSubscriptions, props.match.params.id]",[862,863],[862,862],[887,888],[887,887]]