[{"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\index.js":"1","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\App.js":"2","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\reportWebVitals.js":"3","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MoviesComp.js":"4","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Redux\\reducer.js":"5","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\movieUtil.js":"6","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompA.js":"7","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompB.js":"8","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompC.js":"9","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\WelcomeComp.js":"10","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\LoginComp.js":"11","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\MainComp.js":"12","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\usersUtil.js":"13","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\HeaderComp.js":"14","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\AddUserComp.js":"15","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\CreateAccountComp.js":"16","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UsersComp.js":"17","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UserComp.js":"18","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\EditUserComp.js":"19","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MovieComp.js":"20","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\menu\\UserMenu.js":"21","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\AddMovieComp.js":"22","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\EditMovieComp.js":"23","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\menu\\MovieMenu.js":"24","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\menu\\MemberMenu.js":"25","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MemberComp.js":"26","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\EditMemberComp.js":"27","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\AddMemberComp.js":"28","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\membersUtil.js":"29","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\SubscriptionsUtil.js":"30","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MembersSubscriptionsComp.js":"31","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MemberSubscriptionsComp.js":"32","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\subscriptionsUtil.js":"33","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\SubscribeToMovieComp.js":"34","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MembersComp.js":"35","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\globalUtil.js":"36"},{"size":1923,"mtime":1618867657335,"results":"37","hashOfConfig":"38"},{"size":5003,"mtime":1622442106892,"results":"39","hashOfConfig":"38"},{"size":375,"mtime":1615301173254,"results":"40","hashOfConfig":"38"},{"size":2661,"mtime":1622638282350,"results":"41","hashOfConfig":"38"},{"size":8821,"mtime":1620681603439,"results":"42","hashOfConfig":"38"},{"size":1957,"mtime":1621345732549,"results":"43","hashOfConfig":"38"},{"size":630,"mtime":1612455879221,"results":"44","hashOfConfig":"38"},{"size":341,"mtime":1612423971804,"results":"45","hashOfConfig":"38"},{"size":346,"mtime":1612455798597,"results":"46","hashOfConfig":"38"},{"size":677,"mtime":1622443314475,"results":"47","hashOfConfig":"38"},{"size":2265,"mtime":1622443569515,"results":"48","hashOfConfig":"38"},{"size":683,"mtime":1622443062605,"results":"49","hashOfConfig":"38"},{"size":977,"mtime":1620680671365,"results":"50","hashOfConfig":"38"},{"size":1893,"mtime":1622367654401,"results":"51","hashOfConfig":"38"},{"size":11386,"mtime":1620680926191,"results":"52","hashOfConfig":"38"},{"size":1709,"mtime":1622361214337,"results":"53","hashOfConfig":"38"},{"size":704,"mtime":1621354647988,"results":"54","hashOfConfig":"38"},{"size":1686,"mtime":1620681008664,"results":"55","hashOfConfig":"38"},{"size":12047,"mtime":1617778713759,"results":"56","hashOfConfig":"38"},{"size":5633,"mtime":1622728422635,"results":"57","hashOfConfig":"38"},{"size":543,"mtime":1615888521687,"results":"58","hashOfConfig":"38"},{"size":6002,"mtime":1620679888862,"results":"59","hashOfConfig":"38"},{"size":6441,"mtime":1620680044090,"results":"60","hashOfConfig":"38"},{"size":553,"mtime":1615888593443,"results":"61","hashOfConfig":"38"},{"size":573,"mtime":1617884633549,"results":"62","hashOfConfig":"38"},{"size":3186,"mtime":1620683836502,"results":"63","hashOfConfig":"38"},{"size":4129,"mtime":1620680238345,"results":"64","hashOfConfig":"38"},{"size":4043,"mtime":1620683473248,"results":"65","hashOfConfig":"38"},{"size":2012,"mtime":1621346035369,"results":"66","hashOfConfig":"38"},{"size":3548,"mtime":1618216894768,"results":"67","hashOfConfig":"38"},{"size":878,"mtime":1620681358893,"results":"68","hashOfConfig":"38"},{"size":2738,"mtime":1620112163553,"results":"69","hashOfConfig":"38"},{"size":8089,"mtime":1620680716456,"results":"70","hashOfConfig":"38"},{"size":4966,"mtime":1620045564562,"results":"71","hashOfConfig":"38"},{"size":1573,"mtime":1621800399867,"results":"72","hashOfConfig":"38"},{"size":244,"mtime":1620684584305,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"1221art",{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"77"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"77"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"77"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"77"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"77"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"77"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"77"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"77"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"77"},"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\index.js",["171","172"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from '../src/Redux/reducer';\r\n\r\nimport { createMigrate, persistStore, persistReducer } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel1 from 'redux-persist/es/stateReconciler/autoMergeLevel1';\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport hardSet from 'redux-persist/es/stateReconciler/hardSet';\r\n\r\nimport { BrowserRouter} from 'react-router-dom';\r\n\r\n\r\n\r\nconst migration = {\r\n  0: (state) =>{\r\n    return {\r\n      ...state, \r\n      device: undefined\r\n    }\r\n  },\r\n  1: (state) =>{\r\n    return {\r\n      device: state.device\r\n    }\r\n  }\r\n}\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage, // which reducer want to store\r\n  version: 1,\r\n  stateReconciler: autoMergeLevel1, \r\n  migrate: createMigrate(migration, {debug: false}),\r\n  /*(state) =>{\r\n    console.log('************************************************************');\r\n    return Promise.resolve(state);\r\n  }*/\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducer);\r\n\r\nconst appStore = createStore(pReducer);\r\nconst persistor = persistStore(appStore);\r\n\r\nReactDOM.render(\r\n  <Provider store={ appStore }>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <BrowserRouter >\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["173","174"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\App.js",["175","176","177","178"],"import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n\r\nimport Login from '../src/Components/LoginComp';\r\nimport Main from './Components/MainComp';\r\nimport Welcome from './Components/WelcomeComp';\r\nimport Movies from './Components/movies/MoviesComp';\r\nimport Members from './Components/subscriptions/MembersComp';\r\nimport EditMember from './Components/subscriptions/EditMemberComp';\r\nimport AddMember from './Components/subscriptions/AddMemberComp';\r\nimport Header from './Components/HeaderComp';\r\nimport Users from './Components/users/UsersComp';\r\nimport AddUser from './Components/users/AddUserComp';\r\nimport EditUser from './Components/users/EditUserComp';\r\nimport createAccount from './Components/users/CreateAccountComp';\r\nimport AddMovie from './Components/movies/AddMovieComp';\r\nimport EditMovie from './Components/movies/EditMovieComp';\r\n\r\nimport usersUtil from './Utils/usersUtil';\r\nimport movieUtil from '../src/Utils/movieUtil';\r\nimport memberUtil from './Utils/membersUtil';\r\nimport subscriptionsUtil from './Utils/subscriptionsUtil';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst NO_PERMISSION_MSG = 'You have no permission to';\r\nconst CONTACT_ADMIN_MSG = 'please contact with Adminstrator';\r\n\r\nfunction App() {\r\n\r\n  const users = useSelector(state => state.users);\r\n  const movies = useSelector(state => state.movies);\r\n  const members = useSelector(state => state.members);\r\n  const membersSubscriptions = useSelector(state => state.membersSubscriptions);\r\n  const subscriptions = useSelector(state => state.subscriptions);\r\n  const moviesSubscribers = useSelector(state => state.moviesSubscribers)\r\n\r\n  const dispatch = useDispatch();\r\n  const userFullName = localStorage.getItem('userFullName');//useSelector(state => state.userFullName);\r\n\r\n  useEffect(() => {\r\n    // Using an IIFE\r\n    (async function loadData() {\r\n      if(users.length === 0){\r\n        let respUser = await usersUtil.getUsers();\r\n\r\n        if(respUser != null){\r\n          dispatch({\r\n            type: \"LoadUsers\",\r\n            payload: respUser\r\n          })\r\n        }\r\n      }\r\n\r\n      if(movies.length === 0){\r\n          let resp = await movieUtil.loadMovies();\r\n          let movies = resp.movies;\r\n         // let movie3 = movies.slice(0,2)\r\n        \r\n          dispatch({\r\n            type : \"LoadMovies\",\r\n            payload : movies\r\n          })\r\n        }\r\n\r\n        if(members.length === 0){\r\n          let resp = await memberUtil.loadMembers();\r\n          let members = resp.members;\r\n          \r\n          dispatch({\r\n            type : \"LoadMembers\",\r\n            payload : members\r\n          })\r\n        }\r\n\r\n        //LoadMembersSubscriptions\r\n        if(membersSubscriptions.length === 0){\r\n          let membersSubscriptions = await subscriptionsUtil.getMembersSubscriptions();\r\n\r\n          dispatch({\r\n            type : \"LoadMembersSubscriptions\",\r\n            payload : membersSubscriptions\r\n          })\r\n        }\r\n\r\n        //LoadmoviesSubscribers\r\n        if(moviesSubscribers.length === 0){\r\n          let moviesSubscribers = await subscriptionsUtil.getMoviesSubscriptions();\r\n\r\n          dispatch({\r\n            type : \"LoadmoviesSubscribers\",\r\n            payload : moviesSubscribers\r\n          })\r\n        }\r\n        \r\n\r\n        if(subscriptions.length === 0){\r\n          let resp = await subscriptionsUtil.getSubscriptions();\r\n          let subscriptions = resp.subscriptions;\r\n          \r\n          dispatch({\r\n            type : \"LoadSubscriptions\",\r\n            payload : subscriptions\r\n          })\r\n        }\r\n      })();\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <div className=''>\r\n        {userFullName !== null && userFullName !== '' ? <Header userFullName={userFullName} /> : ''}\r\n\r\n        <Container>\r\n\r\n          \r\n        <Switch>\r\n          <Route exact path=\"/\" component={Welcome}/>\r\n          <Route path=\"/login\" component={Login}/>\r\n          <Route path=\"/createAccount\" component={createAccount}/>\r\n          <Route path=\"/main\" component={Main}/>\r\n          <Route path=\"/main:/msg\" component={Main}/>\r\n          \r\n          <Route path=\"/movies/:id\" component={Movies}/>\r\n          <Route path=\"/movies/\" component={Movies}/>\r\n          <Route path=\"/addMovie\" component={AddMovie}/>\r\n          <Route path=\"/movie/:id\" component={EditMovie}/>\r\n\r\n\r\n          <Route path=\"/subscriptions/:id\"  component={Members}/>\r\n          <Route path=\"/subscriptions/\"  component={Members}/>\r\n          <Route path=\"/subscription/:id\" component={EditMember}/>\r\n          <Route path=\"/addMember\" component={AddMember}/>\r\n        \r\n\r\n          <Route path=\"/users\" component={Users}/>\r\n          <Route path=\"/addUser\" component={AddUser}/>\r\n          <Route path=\"/user/:id\" component={EditUser}/>\r\n        </Switch>\r\n      </Container>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\reportWebVitals.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MoviesComp.js",["179","180","181","182"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport MovieComp from './MovieComp';\r\nimport MovieMenu from './menu/MovieMenu';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nfunction MoviesComp(props) {\r\n    const movies = useSelector( state => state.movies);\r\n    const [movieResult, setMoviesResult] = useState(movies);\r\n    const [hasPermission, setHasPermission] = useState((sessionStorage.getItem(\"permissions\") !== null && sessionStorage.getItem(\"permissions\").includes('View Movies')))\r\n    \r\n    const search = (e) =>{\r\n        let search = e.target.value;\r\n\r\n        let result = movies.filter(m => m.name.toLowerCase().indexOf(search.toLowerCase()) > -1);\r\n        setMoviesResult(result);\r\n    }  \r\n\r\n    useEffect(() => {\r\n        setMoviesResult(movies);\r\n    }, [movies])\r\n    \r\n    useEffect(() => {\r\n        let selectedMovieId = props.match.params.id;\r\n        if(selectedMovieId != undefined){\r\n            let selectedMovie = movieResult.filter(mr => mr._id === selectedMovieId);\r\n            if(selectedMovie.length > 0){\r\n                setMoviesResult(selectedMovie);\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        \r\n      <div className='movies services'>\r\n          <Grid container direction=\"column\" justify=\"flex-start\" spacing={2}>\r\n              <Grid item xs={12} className='menuLine'>\r\n                  <Grid container justify=\"flex-start\" alignItems=\"center\"  >\r\n                      <Grid item>\r\n                          <MovieMenu/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                          <input type=\"text\"  onChange={e => search(e)}></input>\r\n                      </Grid>\r\n                </Grid>\r\n              </Grid>\r\n        \r\n            \r\n            {\r\n                \r\n                !hasPermission ? \r\n                <Grid item xs={12}>\r\n                    <div>You have no permission to view movies</div>\r\n                </Grid>\r\n                :\r\n                <Grid item xs={12} className='MoviesBoxes'>\r\n                    <Grid container direction='row' justify=\"flex-start\" alignItems=\"stretch\" spacing={2} className='startAllMovies'>\r\n                        {    \r\n                            movieResult.map(movie =>{\r\n                                return <MovieComp key={movie._id} movie={movie}/>\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n               \r\n            }\r\n            \r\n        </Grid>\r\n    </div>\r\n    \r\n    );\r\n  }\r\n  \r\n  export default MoviesComp;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Redux\\reducer.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\movieUtil.js",["183"],"import axios from 'axios';\r\nimport globalUtil from './globalUtil';\r\n\r\nconst moviesUrl = 'http://localhost:5000/api/movies/';\r\n\r\n                   \r\nconst loadMovies = async() =>{\r\n    let resp = await axios.get(moviesUrl);\r\n    return resp.data;\r\n}\r\n\r\nconst addMovie = async (newMovie) =>{\r\n    let resp = {};\r\n    try{\r\n        const header = globalUtil.getHeader();\r\n        \r\n        //header structure:  {headers: {\"Authorization\" : `Bearer ${token}`}});\r\n        resp = await axios.post(moviesUrl, newMovie, header);\r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to add new movie: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to add new movie'\r\n        }\r\n\r\n        console.log(resp.data)\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nconst updateMovie = async (updatedMovie) =>{\r\n    let resp = {};\r\n    \r\n    try{\r\n        const header = globalUtil.getHeader();\r\n        //resp = await axios.put(moviesUrl, updatedMovie);\r\n        resp = await axios.put(moviesUrl, updatedMovie, header);\r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to update movie: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to update movie'\r\n        }\r\n\r\n        //console.log(resp.data)\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nconst deleteMovie = async (id) =>{\r\n    let resp = {};\r\n    \r\n    try{\r\n        const header = globalUtil.getHeader();\r\n        //resp = await axios.delete(`${moviesUrl}${id}`);\r\n        resp = await axios.delete(`${moviesUrl}${id}`, header);\r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to delete movie: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to delete movie'\r\n        }\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nexport default { loadMovies, addMovie, updateMovie, deleteMovie };","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompA.js",["184"],"import React  from 'react';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport CompB from '../Components/CompB'\r\nimport CompC from '../Components/CompC'\r\n\r\nfunction CompA(props) {\r\n    const dispatch = useDispatch();\r\n    \r\n      \r\n     \r\n    return (\r\n        \r\n      <div className=\"App\">\r\n    \r\nComp A\r\n        <div>\r\n     \r\n        <button onClick={ () =>{\r\n            console.log(\"in counter\")\r\n            dispatch({\r\n                type : \"LoadData\"\r\n            })\r\n        } }>+</button>\r\n\r\n        <br/>\r\n\r\n        <CompC/>\r\n\r\n        </div>\r\n    \r\n\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default CompA;",["185","186"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompB.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompC.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\WelcomeComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\LoginComp.js",["187","188","189"],"import React, {useState, useEffect} from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport usersUtil from '../Utils/usersUtil';\r\n\r\nimport './LoginComp.css';\r\n\r\n\r\nfunction LoginComp(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [msg, setMsg] = useState('');\r\n\r\n    const userFullName = localStorage.getItem('userFullName');//useSelector(state => state.userFullName);\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    async function login(e) {\r\n    e.preventDefault();\r\n    let userLogin ={\r\n          username: username,\r\n          password: password,\r\n      }\r\n\r\n      let resp = await usersUtil.login(userLogin);\r\n      \r\n      if(resp.success){\r\n          sessionStorage.setItem(\"id\", resp.token);\r\n\r\n          let userFullName = resp.userFullName;\r\n                   \r\n          dispatch({\r\n            type : \"updateUserFullName\",\r\n            payload : userFullName\r\n          });\r\n          \r\n          localStorage.setItem('userFullName', userFullName);\r\n\r\n          const permissions = resp.permissions;\r\n          sessionStorage.setItem('permissions', permissions);\r\n\r\n          history.push(\"/main\"); \r\n      }\r\n      else{\r\n          setMsg(resp.message);\r\n      }\r\n    }\r\n\r\n    return (\r\n        \r\n      <div className='App loginPage'>\r\n          <div className='milkDiv loginForm'>\r\n          {props.location.state != null ? props.location.state.msg : '' }\r\n            <form onSubmit={e => login(e)}>\r\n              <input type='text' className='roundedField' value={username} name='username' placeholder='Username' onChange={(e) => setUsername(e.target.value)}></input><br/>\r\n              <input type='text' className='roundedField' value={password} name='password' placeholder='Password' onChange={(e) => setPassword(e.target.value)}></input><br/>\r\n              <input type='submit' value='GET STARTED' className='roundedBtn'/><br/>\r\n\r\n              <Link to='/createAccount'>Create Account</Link><br/>\r\n              \r\n              <br/>\r\n              {msg}\r\n            </form>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default LoginComp;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\MainComp.js",["190"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Header from './HeaderComp';\r\n\r\nfunction MainComp(props) {\r\n  const [msg, setMsg] = useState('Choose Action');\r\n  const userFullName = useSelector(state => state.userFullName);\r\n  \r\n  useEffect(() => {\r\n    if( props.location.state !== undefined){\r\n      let msg = props.location.state.msg;\r\n      setMsg(msg);\r\n    }\r\n  }, [])\r\n\r\n return (\r\n    <div className='App main'>\r\n      {userFullName !== '' ? <Header userFullName={userFullName} /> : ''}\r\n      \r\n      {msg}\r\n      <br/>\r\n      Diagrams and graph are coming soon....\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default MainComp;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\usersUtil.js",["191"],"import axios from 'axios';\r\nconst usersUrl = \"http://localhost:5000/api/users/\";\r\n\r\nconst login = async (userLogin) =>{\r\n    console.log(userLogin)    \r\n    let resp = await axios.post(`${usersUrl}login`, userLogin);\r\n//console.log(resp)\r\n    return resp.data;\r\n}\r\n\r\nconst createAccount = async (createdUser) =>{\r\n    let resp = await axios.post(`${usersUrl}createAccount`, createdUser);\r\n    return resp.data;\r\n}\r\n\r\nconst addUser = async (newUser) =>{\r\n    let resp = await axios.post(`${usersUrl}add`, newUser);\r\n    return resp.data;\r\n}\r\n\r\nconst deleteUser = async (id) =>{\r\n    let resp = await axios.delete(`${usersUrl}${id}`);\r\n    return resp.data;\r\n}\r\n\r\nconst updateUser = async(updatedUser) =>{\r\n    let resp = await axios.put(usersUrl, updatedUser);\r\n    return resp.data;\r\n}\r\n\r\nconst getUsers = async () =>{\r\n    let resp = await axios.get(`${usersUrl}`);\r\n    return resp.data;\r\n}\r\n\r\nexport default {login, createAccount, addUser, getUsers, deleteUser, updateUser};","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\HeaderComp.js",["192"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './HeaderComp.css';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: 'black', \r\n      borderBottom: '1px solid red',\r\n      color: 'red'\r\n     \r\n    },\r\n  });\r\n\r\nfunction HeaderComp(props){\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const logout = () =>{\r\n        localStorage.clear();\r\n        history.push('/login');\r\n\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n             <AppBar className={classes.root} position=\"fixed\" >\r\n                <Toolbar>\r\n                <div  className='menu'>\r\n                    <div>\r\n                        <ul>\r\n                            <li>logo</li>&nbsp;&nbsp;\r\n                            <li><Link to='movies'>Movies</Link></li>&nbsp;&nbsp;\r\n                            <li><Link to='subscriptions'>Subscriptions</Link></li>&nbsp;&nbsp;\r\n                            <li><Link to='users'>User's Management</Link></li>&nbsp;&nbsp;\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                \r\n                    <div className='logout'>\r\n                        <b>\r\n                            {props.userFullName !== '' ? `Hello ${props.userFullName} | ` : ''} \r\n                        </b>\r\n                        {props.userFullName !== '' ? <a onClick={() => logout()}>\r\n                        &nbsp;Logout\r\n                        </a>  : ''} \r\n\r\n                      \r\n\r\n                    \r\n                    </div>\r\n                </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderComp;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\AddUserComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\CreateAccountComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UsersComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UserComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\EditUserComp.js",["193"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport UserMenu from './menu/UserMenu';\r\nimport usersUtil from '../../Utils/usersUtil';\r\n\r\nfunction EditUserComp(props) {\r\n    const [user, setUser] = useState(null);\r\n    const users = useSelector(state => state.users);\r\n    const msg = useSelector(state => state.msg);\r\n\r\n    useEffect(() => {\r\n        let userId = props.match.params.id;\r\n        let user = users.filter(u => u.id === userId)[0];\r\n\r\n        let fields = ['firstName', 'lastName', 'username', 'sessionTimeOut', 'permissions'];\r\n\r\n        fields.forEach(field => formik.setFieldValue(field, user[field]));\r\n\r\n        setUser(user);\r\n        \r\n    }, [])\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        \r\n        initialValues: {\r\n            firstName: user ? user.firstName : '',\r\n            lastName: user ? user.lastName : '',\r\n            username: user ? user.username : '',\r\n            sessionTimeOut: user ? user.sessionTimeOut : 0,\r\n            permissions: user ? user.permissions: [],\r\n        },\r\n        validationSchema: Yup.object({\r\n            firstName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            lastName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            username: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(10, 'Too Long!')\r\n              .required('Required'),\r\n            sessionTimeOut: Yup.number()\r\n              .min(1, 'Must be more than 0 sec')\r\n              .max(60, 'Must be less than 60 sec')\r\n              .integer()\r\n              .positive()\r\n              .required('Required'),\r\n            permissions: Yup.array().min(1, 'Choose at list one permission')\r\n            }),\r\n        onSubmit: async (values) => {\r\n            let updatedUser = {\r\n                'id': user.id,\r\n                'firstName' : values.firstName,\r\n                'lastName' : values.lastName,\r\n                'username' : values.username,\r\n                'sessionTimeOut' : values.sessionTimeOut,\r\n                'permissions' : values.permissions\r\n            }\r\n\r\n            let resp = await usersUtil.updateUser(updatedUser);\r\n\r\n            if(resp.success){\r\n                dispatch({\r\n                    type: \"UpdateUser\",\r\n                    payload: updatedUser\r\n                })\r\n\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n\r\n                history.push('/users');\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n            }\r\n            \r\n        },\r\n    });\r\n\r\n    const handleChange = (e) =>{\r\n        formik.handleChange(e);\r\n        const {name, checked, value} = e.target;\r\n        let userPermissions = formik.values.permissions;\r\n\r\n        if(name === 'createSubscriptions' || name === 'deleteSubscriptions' || name === 'updateSubscriptions'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n\r\n                if(!userPermissions.includes('View Subscriptions')){\r\n                    userPermissions = [...userPermissions, 'View Subscriptions'];\r\n                }\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p !== value);\r\n                if(!userPermissions.includes('Create Subscriptions') && !userPermissions.includes('Delete Subscriptions') && !userPermissions.includes('Update Subscriptions')){\r\n                    userPermissions = userPermissions.filter(p => p !== 'View Subscriptions');\r\n                }\r\n            }\r\n        }\r\n        else if(name === 'createMovies' || name === 'deleteMovies' || name === 'updateMovies'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n\r\n                if(!userPermissions.includes('View Movies')){\r\n                    userPermissions = [...userPermissions, 'View Movies'];\r\n                }\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p !== value);\r\n                if(!userPermissions.includes('Create Movies') && !userPermissions.includes('Delete Movies') && !userPermissions.includes('Update Movies')){\r\n                    userPermissions = userPermissions.filter(p => p !== 'View Movies');\r\n                }\r\n            }\r\n        }\r\n        else if(name === 'viewSubscriptions'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p.indexOf('S') === -1);\r\n            }\r\n        }\r\n        else if(name === 'viewMovies'){\r\n            if(checked){\r\n                userPermissions = [...userPermissions, value];\r\n\r\n            }\r\n            else{\r\n                userPermissions = userPermissions.filter(p => p.indexOf('M') === -1);\r\n            }\r\n        }\r\n\r\n        formik.setFieldValue('permissions', userPermissions);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n             <UserMenu/>\r\n             {msg}\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n            <label htmlFor='firstName'>First Name</label>\r\n                <input\r\n                    id='firstName'\r\n                    name='firstName'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.firstName}\r\n                />\r\n                {formik.touched.firstName && formik.errors.firstName ? (\r\n                    <div>{formik.errors.firstName}</div>\r\n                ) : null}\r\n                \r\n                <br/>\r\n\r\n                <label htmlFor='lastName'>Last Name</label>\r\n                <input\r\n                    id='lastName'\r\n                    name='lastName'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.lastName}\r\n                />\r\n                {formik.touched.lastName && formik.errors.lastName ? (\r\n                    <div>{formik.errors.lastName}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='username'>UserName</label>\r\n                <input\r\n                    id='username'\r\n                    name='username'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.username}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                    <div>{formik.errors.username}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='sessionTimeOut'>Session Time Out</label>\r\n                <input\r\n                    id='sessionTimeOut'\r\n                    name='sessionTimeOut'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.sessionTimeOut}\r\n                />\r\n                {formik.touched.sessionTimeOut && formik.errors.sessionTimeOut ? (\r\n                    <div>{formik.errors.sessionTimeOut}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n\r\n                Permission: <br/>\r\n                    \r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='View Subscriptions' checked={formik.values.permissions.includes('View Subscriptions')}  onChange={handleChange} id='viewSubscriptions' name='viewSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='View Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Create Subscriptions' checked={formik.values.permissions.includes('Create Subscriptions')} onChange={handleChange} id='createSubscriptions' name='createSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Create Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Delete Subscriptions' checked={formik.values.permissions.includes('Delete Subscriptions')}onChange={handleChange} id='deleteSubscriptions' name='deleteSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Delete Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Update Subscriptions' checked={formik.values.permissions.includes('Update Subscriptions')} onChange={handleChange} id='updateSubscriptions' name='updateSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Update Subscriptions'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='View Movies' checked={formik.values.permissions.includes('View Movies')} onChange={handleChange} id='viewMovies' name='viewMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='View Movies'\r\n                    />\r\n                    \r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Create Movies' checked={formik.values.permissions.includes('Create Movies')} onChange={handleChange} id='createMovies' name='createMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Create Movies'\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Delete Movies' checked={formik.values.permissions.includes('Delete Movies')} onChange={handleChange} id='deleteMovies' name='deleteMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Delete Movies'\r\n                    />\r\n                    \r\n                    <FormControlLabel\r\n                        control={<Checkbox value='Update Movies' checked={formik.values.permissions.includes('Update Movies')} onChange={handleChange} id='updateMovies' name='updateMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Update Movies'\r\n                    />\r\n                    \r\n                </FormGroup>\r\n                {formik.touched.permissions && formik.errors.permissions ? (\r\n                        <div>{formik.errors.permissions}</div>\r\n                    ) : null}\r\n                \r\n\r\n\r\n                <button type='submit'>Update</button>\r\n                <button><Link to=\"/users\">Cancel</Link></button>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default EditUserComp;\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MovieComp.js",["194","195","196","197","198"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport moment from 'moment';\r\n\r\nimport './MovieComp.css';\r\nimport moviesUtil from '../../Utils/movieUtil';\r\nimport { Grid } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nimport { green } from '@material-ui/core/colors';\r\n\r\n\r\n\r\nfunction MovieComp(props) {\r\n    const movieSubscribers = useSelector(state => state.moviesSubscribers.filter(stm => stm.id === props.movie._id)[0].subscribersToMovie);\r\n    const members = useSelector(state => state.members);\r\n    const [hasPermissionToDelete, setHasPermissionToDelete] = useState((sessionStorage.getItem(\"permissions\") !== null && sessionStorage.getItem(\"permissions\").includes('Delete Movies')))\r\n    const [hasPermissionToUpdate, setHasPermissionToUpdate] = useState((sessionStorage.getItem(\"permissions\") !== null && sessionStorage.getItem(\"permissions\").includes('Update Movies')))\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const deleteMovie = async (movieId) =>{\r\n        let response = await moviesUtil.deleteMovie(movieId);\r\n        if(response.success){\r\n            dispatch({\r\n                type: \"DeleteMovie\",\r\n                payload: movieId\r\n            })\r\n        }\r\n        //else{\r\n            dispatch({\r\n                type: \"UpdateMsg\",\r\n                payload: response.msg\r\n            })\r\n       // }\r\n\r\n        history.push('/movies');\r\n    \r\n    }\r\n\r\n    return (\r\n        \r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <Paper className=\"movie\">\r\n                    <Grid container direction='column' justify=\"center\" spacing={1}>\r\n                        <Grid item  sm={12}>\r\n                            <Grid container justify='flex-start'  alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <Box m={1}><img className=\"imgSize\" src={props.movie.image.medium} alt={props.movie.name}/></Box>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Grid container direction='column' className=\"movieDetails\">\r\n                                        <Grid item>\r\n                                            {props.movie.name} \r\n                                        </Grid>\r\n                                        <Grid item >\r\n                                            {props.movie.premiered.slice(0, 4)}\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <div className='genres'>\r\n                                                {props.movie.genres.join()} \r\n                                            </div>\r\n                                            \r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item sm={12}>\r\n                            {\r\n                                movieSubscribers.length === 0 ?\r\n                                <Box className='subscribersList'>\r\n                                    <ul  className='subscribersNameList'>\r\n                                        <li className=\"movieDetails\">There are no subscribers for this movie</li>\r\n                                    </ul>\r\n                               </Box>\r\n                                :\r\n                                <Box className='subscribersList'>\r\n                                    <ul className='subscribersNameList'>\r\n                                    {\r\n                                        movieSubscribers.map(ms => {\r\n                                            return <li className='listElement' key={ms.id}><Link to={`/subscriptions/${ms.id}`}>{members.filter(m => m._id === ms.id)[0].name}</Link>, <div className='subscriptionDate'>{moment(ms.dateWatched).format('YYYY')}</div></li>\r\n                                        })\r\n                                    }\r\n                                    </ul>\r\n                                </Box>\r\n                                \r\n                            }\r\n                            \r\n                        </Grid>\r\n\r\n                        <Grid item sm={12}>\r\n                            <Box m={1}>\r\n                                {\r\n                                    hasPermissionToUpdate ?\r\n                                        <Button size=\"small\" color=\"primary\" variant=\"outlined\"><Link to={`/movie/${props.movie._id}`}>Edit</Link></Button>\r\n                                    :\r\n                                    <Button size=\"small\" color=\"primary\" variant=\"outlined\" disabled><Link to={`/movie/${props.movie._id}`}>Edit</Link></Button>\r\n\r\n                                }\r\n                                <Button size=\"small\" className='deleteBtn' color=\"primary\" variant=\"outlined\" disabled = {!hasPermissionToDelete} >\r\n                                    <a onClick={() => deleteMovie(props.movie._id)}>Delete</a>\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default MovieComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\menu\\UserMenu.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\AddMovieComp.js",["199"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MovieMenu from './menu/MovieMenu';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport './MovieComp.css';\r\nimport moviesUtil from '../../Utils/movieUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n      \r\n    },\r\n    date: {\r\n        color: \"red\",\r\n        backgroundColor: 'white'\r\n    }\r\n  }));\r\n\r\nfunction AddMovieComp() {\r\n    const [msg, setMsg] = useState('');\r\n    const [hasPermission, setHasPermission] = useState((sessionStorage.getItem(\"permissions\") !== null && sessionStorage.getItem(\"permissions\").includes('Create Movies')))\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n       \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            genres: '',\r\n            imageUrl: '',\r\n            premiered: '',\r\n            \r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            genres: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            imageUrl: Yup.string()\r\n              .min(10, 'Too Short!')\r\n              .max(100, 'Too Long!')\r\n              .required('Required'),\r\n            premiered: Yup.date()\r\n              .min(new Date('01/01/1930'))\r\n              .max(new Date('01/01/2930'))                   \r\n              .required('Required'),\r\n        }),\r\n        onSubmit: async (values) => {\r\n            let genres = values.genres.split(',');\r\n            let addedMovie = {\r\n                name : values.name,\r\n                genres : genres,\r\n                image : {\r\n                    medium : values.imageUrl,\r\n                    original : ''\r\n                },\r\n                premiered : values.premiered\r\n            }\r\n\r\n            let resp = await moviesUtil.addMovie(addedMovie)\r\n            //console.log(resp.data)\r\n\r\n            if(resp.success){\r\n                addedMovie._id = resp.movieId;\r\n                \r\n                dispatch({\r\n                    type: \"AddMovie\",\r\n                    payload: addedMovie\r\n                })\r\n                formik.resetForm();\r\n                setMsg(resp.msg);\r\n\r\n                //history.push('/movies');\r\n            }\r\n            else{\r\n                setMsg(resp.msg);\r\n                \r\n            }\r\n            \r\n            // setMsg(resp.msg);\r\n        },\r\n              \r\n\r\n              \r\n\r\n    });\r\n/*\r\n    const handleChange = (e) =>{\r\n        formik.handleChange(e);\r\n        alert(e.target.value)\r\n        console.log(formik.values.name)\r\n        \r\n    }\r\n*/\r\n    return (\r\n        <React.Fragment>\r\n            <MovieMenu/>\r\n            { !hasPermission ?\r\n                <div>You have no permission to create movies</div>\r\n                :\r\n\r\n            <div>\r\n                {msg}\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <label htmlFor=\"name\">Name</label>\r\n\r\n                    <input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        {...formik.getFieldProps('name')}\r\n                    />\r\n\r\n                \r\n                    {formik.touched.name && formik.errors.name ? (\r\n                        <div>{formik.errors.name}</div>\r\n                    ) : null}\r\n\r\n                    <br/>\r\n\r\n                    <label htmlFor=\"genres\">Genres</label>\r\n                    <input\r\n                        id=\"genres\"\r\n                        type=\"text\"\r\n                        {...formik.getFieldProps('genres')}\r\n                    />\r\n                    {formik.touched.genres && formik.errors.genres ? (\r\n                        <div>{formik.errors.genres}</div>\r\n                    ) : null}\r\n\r\n                    <br/>\r\n\r\n                    <label htmlFor=\"imageUrl\">Image Url</label>\r\n                    <input\r\n                        id=\"imageUrl\"\r\n                        type=\"text\"\r\n                        {...formik.getFieldProps('imageUrl')}\r\n                    />\r\n                    {formik.touched.imageUrl && formik.errors.imageUrl ? (\r\n                        <div>{formik.errors.imageUrl}</div>\r\n                    ) : null}\r\n                    \r\n                    <br/>\r\n                    <label htmlFor=\"premiered\">Premiered</label>\r\n\r\n                    <TextField \r\n                        id=\"premiered\"\r\n                        label=\"Premiered\"\r\n                        type=\"date\"\r\n                        format={'dd/mm/yyyy'}\r\n                        onChange={formik.handleChange}\r\n                        {...formik.getFieldProps('premiered')}\r\n                        \r\n                        \r\n                        className={classes.date}\r\n                        \r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        \r\n                        \r\n                        }}\r\n                        \r\n                        \r\n                    />\r\n                    {formik.touched.premiered && formik.errors.premiered ? (\r\n                        <div>{formik.errors.premiered}</div>\r\n                    ) : null}\r\n    <br/>\r\n                    <button type='submit'>Submit</button>\r\n                    <button><Link to=\"/movies\">Cancel</Link></button>\r\n                </form>\r\n            </div>\r\n        }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddMovieComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\EditMovieComp.js",["200"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport MovieMenu from './menu/MovieMenu';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport './MovieComp.css';\r\nimport moviesUtil from '../../Utils/movieUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n      \r\n    },\r\n    input: {\r\n        color: \"red\",\r\n        backgroundColor: 'white'\r\n    }\r\n  }));\r\n\r\nfunction EditMovieComp(props) {\r\n    const [msg, setMsg] = useState('');\r\n    const movies = useSelector(state => state.movies);\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            genres: '',\r\n            imageUrl: '',\r\n            premiered: '',\r\n            \r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            genres: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            imageUrl: Yup.string()\r\n              .min(10, 'Too Short!')\r\n              .max(100, 'Too Long!')\r\n              .required('Required'),\r\n            premiered: Yup.date()\r\n              .min(new Date('01/01/1930'))\r\n              .max(new Date('01/01/2930'))                   \r\n              .required('Required'),\r\n        }),\r\n        onSubmit: async (values) => {\r\n            let genres = values.genres.split(',');\r\n            let updatedMovie = {\r\n                _id: props.match.params.id,\r\n                name : values.name,\r\n                genres : genres,\r\n                image : {\r\n                    medium : values.imageUrl,\r\n                    original : ''\r\n                },\r\n                premiered : values.premiered\r\n            }\r\n\r\n            let resp = await moviesUtil.updateMovie(updatedMovie);\r\n            \r\n            if(resp.success){\r\n                dispatch({\r\n                    type: \"UpdateMovie\",\r\n                    payload: updatedMovie\r\n                })\r\n                \r\n                setMsg(resp.msg);\r\n\r\n                history.push('/movies');\r\n            }\r\n            else{\r\n                setMsg(resp.msg);\r\n                \r\n            }\r\n            \r\n            // setMsg(resp.msg);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        let movieId = props.match.params.id;\r\n        let movie = movies.filter(m => m._id === movieId)[0];\r\n        console.log(movie)\r\n\r\n        let fields = ['name', 'genres', 'imageUrl', 'premiered'];\r\n\r\n        fields.forEach(field => {\r\n                if(field === 'imageUrl'){\r\n                    formik.setFieldValue(field, movie.image.medium);\r\n                }\r\n                else if(field === 'premiered'){\r\n                    formik.setFieldValue(field, movie[field].slice(0, 10));\r\n                }\r\n                else if(field === 'genres'){\r\n                    formik.setFieldValue(field, movie[field].toString());\r\n                }\r\n                else{\r\n                    formik.setFieldValue(field, movie[field]);\r\n                }\r\n            }\r\n        );\r\n\r\n        //setMovie(movie);\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <MovieMenu/>\r\n            {msg}\r\n            \r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label htmlFor=\"name\">Name</label>\r\n\r\n                <input\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    {...formik.getFieldProps('name')}\r\n                    value={formik.values.name}\r\n                />\r\n\r\n                {formik.touched.name && formik.errors.name ? (\r\n                    <div>{formik.errors.name}</div>\r\n                ) : null}\r\n\r\n                <br/>\r\n\r\n                <label htmlFor=\"genres\">Genres</label>\r\n                <input\r\n                    id=\"genres\"\r\n                    name=\"genres\"\r\n                    type=\"text\"\r\n                    {...formik.getFieldProps('genres')}\r\n                    value={formik.values.genres}\r\n                />\r\n                {formik.touched.genres && formik.errors.genres ? (\r\n                    <div>{formik.errors.genres}</div>\r\n                ) : null}\r\n\r\n                <br/>\r\n\r\n                <label htmlFor=\"imageUrl\">Image Url</label>\r\n                <input\r\n                    id=\"imageUrl\"\r\n                    type=\"text\"\r\n                    {...formik.getFieldProps('imageUrl')}\r\n                    value={formik.values.imageUrl}\r\n                />\r\n                {formik.touched.imageUrl && formik.errors.imageUrl ? (\r\n                    <div>{formik.errors.imageUrl}</div>\r\n                ) : null}\r\n                \r\n                <br/>\r\n                <label htmlFor=\"premiered\">Premiered</label>\r\n\r\n                <TextField \r\n                    id=\"premiered\"\r\n                    label=\"Premiered\"\r\n                    type=\"date\"\r\n                    format={'dd/mm/yyyy'}\r\n                    onChange={formik.handleChange}\r\n                    {...formik.getFieldProps('premiered')}\r\n                    value={formik.values.premiered}\r\n                    \r\n                    \r\n                    className={classes.input}\r\n                    \r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    \r\n                    \r\n                    }}\r\n                    \r\n                    \r\n                />\r\n                {formik.touched.premiered && formik.errors.premiered ? (\r\n                    <div>{formik.errors.premiered}</div>\r\n                ) : null}\r\n<br/>\r\n                <button type='submit'>Submit</button>\r\n                <button><Link to=\"/movies\">Cancel</Link></button>\r\n            </form>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EditMovieComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\menu\\MovieMenu.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\menu\\MemberMenu.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MemberComp.js",["201","202"],"import React, { useState} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport SubscribeToMovie from './SubscribeToMovieComp';\r\n\r\nimport membersUtil from '../../Utils/membersUtil';\r\n\r\nimport moment from 'moment';\r\n\r\n\r\nimport './MemberComp.css'\r\n\r\nfunction MemberComp(props) {\r\n    const [isShowUnsubscribeMovies, setIsShowUnsubscribeMovis] = useState(false);\r\n\r\n    const movies = useSelector(state => state.movies)\r\n    const moviesSubscribed = useSelector(state => state.membersSubscriptions.filter(ms => ms.id === props.member._id)[0].movies);\r\n\r\n    const [hasPermissionToDelete, setHasPermissionToDelete] = useState((sessionStorage.getItem(\"permissions\") !== null && sessionStorage.getItem(\"permissions\").includes('Delete Subscriptions')))\r\n    const [hasPermissionToUpdate, setHasPermissionToUpdate] = useState((sessionStorage.getItem(\"permissions\") !== null && sessionStorage.getItem(\"permissions\").includes('Update Subscriptions')))\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const deleteMember = async (memberId) =>{\r\n        let response = await membersUtil.deleteMember(memberId);\r\n        if(response.success){\r\n            dispatch({\r\n                type: \"DeleteMember\",\r\n                payload: memberId\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n        \r\n            type: \"UpdateMsg\",\r\n            payload: response.msg\r\n        })\r\n\r\n        history.push('/subscriptions');\r\n\r\n\r\n    }\r\n\r\n    const subscribeToMovie = () =>{\r\n        setIsShowUnsubscribeMovis(!isShowUnsubscribeMovies);\r\n    }\r\n\r\n    return (\r\n        <div className=\"member\">\r\n           <h4>{props.member.name}</h4>\r\n           Email: {props.member.email} <br/>\r\n           City: {props.member.city} <br/>\r\n\r\n           {\r\n               hasPermissionToUpdate ?\r\n                    <Button color=\"primary\" variant=\"outlined\"><Link to={`/subscription/${props.member._id}`}>Edit</Link></Button>\r\n               :\r\n               <Button color=\"primary\" variant=\"outlined\" disabled><Link to={`/subscription/${props.member._id}`}>Edit</Link></Button>\r\n           }\r\n\r\n           <input type=\"button\" value=\"Delete\" disabled = {!hasPermissionToDelete} onClick={() => deleteMember(props.member._id)}/>\r\n\r\n           <h5>Movies Watched</h5>\r\n           <button onClick={() => subscribeToMovie()} >subscribe To New Movie</button>\r\n\r\n            {isShowUnsubscribeMovies ? <SubscribeToMovie memberId={props.member._id} /> : null}\r\n            {\r\n                moviesSubscribed.length === 0 ? <div>this member didn't watch any movie yet</div> : \r\n                <ul>\r\n                    {\r\n                        moviesSubscribed.map(ms =>{\r\n                            return <li key={ms.id} className='listElement'><Link to={`/movies/${ms.id}`}>{movies.filter(m => m._id === ms.id)[0].name}</Link>, {moment(ms.watchedDate).format('DD/MM/YYYY')}</li>\r\n\r\n                        })\r\n                    }\r\n                </ul>\r\n            }\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberComp;\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\EditMemberComp.js",["203","204","205"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport MemberMenu from './menu/MemberMenu';\r\nimport membersUtil from '../../Utils/membersUtil';\r\n\r\nfunction EditMemberComp(props) {\r\n    const [msg, setMsg] = useState();\r\n    const members = useSelector(state => state.members);\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            city: '',\r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n              .min(5, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            email: Yup.string()\r\n                .required(\"Please enter valid email\")\r\n                .matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \"Email is not valid\"),\r\n            city: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n        }),\r\n        onSubmit: async (values) => {\r\n            let updateddMember = values;\r\n            updateddMember.id = props.match.params.id;\r\n            \r\n            let resp = await membersUtil.updateMember(updateddMember);\r\n\r\n            if(resp.success){\r\n                dispatch({\r\n                    type: \"UpdateMember\",\r\n                    payload: updateddMember\r\n                })\r\n                //formik.resetForm();\r\n                setMsg(resp.msg);\r\n            }\r\n            else{\r\n                setMsg(resp.msg);\r\n                \r\n            }\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        let memberId = props.match.params.id;\r\n        let member = members.filter(m => m._id === memberId)[0];\r\n        \r\n        let fields = ['name', 'email', 'city'];\r\n\r\n        fields.forEach(field => {\r\n            formik.setFieldValue(field, member[field]);\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <MemberMenu/>\r\n                {msg}\r\n                <form onSubmit={formik.handleSubmit}>\r\n\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        {...formik.getFieldProps('name')}\r\n                        value={formik.values.name}\r\n                    />\r\n                    \r\n                    {formik.touched.name && formik.errors.name ? (\r\n                        <div>{formik.errors.name}</div>\r\n                    ) : null}\r\n                    <br/>\r\n\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        {...formik.getFieldProps('email')}\r\n                        value={formik.values.email}\r\n                    />\r\n                    \r\n                    {formik.touched.email && formik.errors.email ? (\r\n                        <div>{formik.errors.email}</div>\r\n                    ) : null}\r\n                    <br/>\r\n\r\n                    <label htmlFor=\"city\">City</label>\r\n                    <input\r\n                        id=\"city\"\r\n                        type=\"text\"\r\n                        {...formik.getFieldProps('city')}\r\n                        value={formik.values.city}                        \r\n                    />\r\n                    \r\n                    {formik.touched.city && formik.errors.city ? (\r\n                        <div>{formik.errors.city}</div>\r\n                    ) : null}\r\n                    <br/>\r\n\r\n                    <button type='submit'>Submit</button>\r\n                    <button><Link to=\"/subscriptions\">Cancel</Link></button>\r\n\r\n\r\n                </form>\r\n            </React.Fragment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMemberComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\AddMemberComp.js",["206","207","208"],"import React, {useState} from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport MemberMenu from '../subscriptions/menu/MemberMenu';\r\n\r\nimport membersUtil from '../../Utils/membersUtil';\r\n\r\nfunction AddMemberComp() {\r\n    const [msg, setMsg] = useState('');\r\n    const [hasPermission, setHasPermission] = useState((sessionStorage.getItem(\"permissions\") !== null && sessionStorage.getItem(\"permissions\").includes('Create Member')))\r\n\r\n    const dispatch = useDispatch();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            city: '',\r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n              .min(5, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            email: Yup.string()\r\n                .required(\"Please enter valid email\")\r\n                .matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \"Email is not valid\"),\r\n            city: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n        }),\r\n        onSubmit: async (values) => {\r\n            let addedMember = values;\r\n            let resp = await membersUtil.addMember(addedMember);\r\n            \r\n            \r\n          if(resp.success){\r\n                addedMember._id = resp.memberId;\r\n              \r\n                dispatch({\r\n                    type: \"AddMember\",\r\n                    payload: addedMember\r\n                })\r\n                formik.resetForm();\r\n                setMsg(resp.msg);\r\n            }\r\n            else{\r\n                setMsg(resp.msg);\r\n                \r\n            }\r\n        },\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n            <MemberMenu/>\r\n            {\r\n                !hasPermission ?\r\n                <div>You have no permission to create members</div>\r\n                :\r\n                <div>\r\n                    {msg}\r\n                    <form onSubmit={formik.handleSubmit}>\r\n\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            {...formik.getFieldProps('name')}\r\n                        />\r\n                        \r\n                        {formik.touched.name && formik.errors.name ? (\r\n                            <div>{formik.errors.name}</div>\r\n                        ) : null}\r\n                        <br/>\r\n\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        \r\n                        {formik.touched.email && formik.errors.email ? (\r\n                            <div>{formik.errors.email}</div>\r\n                        ) : null}\r\n                        <br/>\r\n\r\n                        <label htmlFor=\"city\">City</label>\r\n                        <input\r\n                            id=\"city\"\r\n                            type=\"text\"\r\n                            {...formik.getFieldProps('city')}\r\n                        />\r\n                        \r\n                        {formik.touched.city && formik.errors.city ? (\r\n                            <div>{formik.errors.city}</div>\r\n                        ) : null}\r\n                        <br/>\r\n\r\n                        <button type='submit'>Submit</button>\r\n                        <button><Link to=\"/subscriptions\">Cancel</Link></button>\r\n\r\n\r\n                    </form>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddMemberComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\membersUtil.js",["209"],"import axios from 'axios';\r\n\r\nimport globalUtil from './globalUtil';\r\n\r\nconst membersUrl = 'http://localhost:5000/api/members/';\r\n                   \r\nconst loadMembers = async() =>{\r\n    let resp = await axios.get(membersUrl);\r\n    return resp.data;\r\n}\r\n\r\nconst addMember = async (newMember) =>{\r\n    let resp = {};\r\n    try{\r\n        const header = globalUtil.getHeader();\r\n        //resp = await axios.post(membersUrl, newMember);\r\n        resp = await axios.post(membersUrl, newMember, header);\r\n        \r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to add new member: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to add new member'\r\n        }\r\n\r\n        console.log(resp.data)\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nconst updateMember = async (updatedMember) =>{\r\n    let resp = {};\r\n    \r\n    try{\r\n        const header = globalUtil.getHeader();\r\n        //resp = await axios.put(`${membersUrl}/${updatedMember.id}`, updatedMember);\r\n        resp = await axios.put(`${membersUrl}/${updatedMember.id}`, updatedMember, header);\r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to update member: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to update member'\r\n        }\r\n\r\n        //console.log(resp.data)\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nconst deleteMember = async (id) =>{\r\n    let resp = {};\r\n    \r\n    try{\r\n        const header = globalUtil.getHeader();\r\n        //resp = await axios.delete(`${membersUrl}${id}`);\r\n        resp = await axios.delete(`${membersUrl}${id}`, header);\r\n    }\r\n    catch(err){\r\n        console.log(`An Error occured while try to delete member: ${err}`);\r\n        resp.data = {\r\n            succrss : false,\r\n            msg : 'An Error occured while try to delete member'\r\n        }\r\n    }\r\n\r\n    return resp.data;\r\n}\r\n\r\nexport default { loadMembers, addMember, updateMember, deleteMember };","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\SubscriptionsUtil.js",["210","211","212"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MembersSubscriptionsComp.js",["213","214","215"],"import React, {useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MemberSubscriptions from './MemberSubscriptionsComp';\r\nimport MemberMenu from './menu/MemberMenu';\r\n\r\nimport './MembersSubscriptionsComp.css';\r\nimport subscriptionsUtil from '../../Utils/subscriptionsUtil';\r\n\r\nfunction MembersSubscriptionsComp() {\r\n    const membersSubscriptions = useSelector(state => state.membersSubscriptions);\r\n    const msg = useSelector(state => state.msg)\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=''>\r\n            <MemberMenu/>\r\n            {msg}\r\n            <div className='subscribers'>\r\n                All Members Subscriptions\r\n\r\n                {\r\n                    membersSubscriptions.map(ms =>{\r\n                        return <MemberSubscriptions key={ms.id} memberSubscriptions={ms} />\r\n\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default MembersSubscriptionsComp\r\n",["216","217"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MemberSubscriptionsComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\subscriptionsUtil.js",["218","219"],"import axios from 'axios';\r\nimport membersUtils from './membersUtil';\r\nimport moviesUtils from './movieUtil';\r\n\r\nconst subscriptionsUrl = \"http://localhost:5000/api/subscriptions/\";\r\n\r\nconst getSubscriptions = async () =>{\r\n    let resp = await axios.get(`${subscriptionsUrl}`);\r\n    return resp.data;\r\n\r\n}\r\n/*\r\nconst getFullMembersSubscriptions = async () => {\r\n    let subscriptionsMovies = null; //the members's subscriptions movies (each member and his subscribed & unsubscribed movies)\r\n    let membersResp = await membersUtils.loadMembers();\r\n    let moviesResp = await moviesUtils.loadMovies();\r\n    let subscriptionsResp = await getSubscriptions();\r\n    let members, movies, subscriptions;\r\n\r\n    if(membersResp){\r\n        members = membersResp.members;\r\n    }\r\n\r\n    if(moviesResp){\r\n        movies = moviesResp.movies;\r\n    }\r\n\r\n    if(subscriptionsResp){\r\n        subscriptions = subscriptionsResp.subscriptions;\r\n    }\r\n    \r\n\r\n    if(subscriptions && members && movies)\r\n    {\r\n        subscriptionsMovies = members.map(member =>{\r\n            let memberSubscribesMovies;  //all movies the member watched already (the movie's id and watched date)\r\n            let memberMovies;   //all movies the member watched already (include the movie's data)\r\n            let subscribeMoviesIds = [];    //all the subscribes's movies id (per member)\r\n            let unsubscribedMovies = [];    //unwatched movies for member\r\n            let subscription = subscriptions.filter(s => s.memberId === member._id);\r\n            if(subscription.length > 0){\r\n                memberSubscribesMovies = subscription[0].movies;\r\n                let movie;\r\n\r\n                if(memberSubscribesMovies != undefined){\r\n                    memberMovies = memberSubscribesMovies.map(mi =>{\r\n                        subscribeMoviesIds.push(mi.movieId)\r\n                        movie = movies.filter(m => mi.movieId === m._id);\r\n                        if(movie.length > 0){\r\n                            return {\r\n                                \"id\" : movie[0]._id,\r\n                                \"name\" : movie[0].name,\r\n                                'genres': movie[0].genres,\r\n                                'imgUrl': movie[0].image.medium,\r\n                                'premiered': movie[0].image.premiered,\r\n                                \"watchedDate\" : mi.date\r\n                            }\r\n\r\n                        }\r\n                        \r\n                    })\r\n                    \r\n                    movies.forEach(m => {\r\n                        if(!subscribeMoviesIds.includes(m._id)){\r\n                            let unsubscribedMovie = {\r\n                                \"id\" : m._id,\r\n                                \"name\" : m.name\r\n                            }\r\n                            \r\n                           unsubscribedMovies = [...unsubscribedMovies, unsubscribedMovie];\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else{\r\n                unsubscribedMovies = movies;\r\n            }\r\n\r\n            return {\r\n                \"id\" : member._id,\r\n                \"name\" : member.name,\r\n                \"email\" : member.email,\r\n                \"city\" : member.city,\r\n                \"movies\" : memberMovies !== undefined ? memberMovies : [],\r\n                \"unwatched\" : unsubscribedMovies\r\n            }\r\n        })\r\n    }\r\n\r\n    return subscriptionsMovies;\r\n\r\n}\r\n*/\r\n\r\nconst getMembersSubscriptions = async () => {\r\n    let subscriptionsMovies = null; //the members's subscriptions movies (each member and his subscribed & unsubscribed movies)\r\n    let membersResp = await membersUtils.loadMembers();\r\n    let moviesResp = await moviesUtils.loadMovies();\r\n    let subscriptionsResp = await getSubscriptions();\r\n    let members, movies, subscriptions;\r\n\r\n    if(membersResp){\r\n        members = membersResp.members;\r\n    }\r\n\r\n    if(moviesResp){\r\n        movies = moviesResp.movies;\r\n    }\r\n\r\n    if(subscriptionsResp){\r\n        subscriptions = subscriptionsResp.subscriptions;\r\n    }\r\n    \r\n\r\n    if(subscriptions && members && movies)\r\n    {\r\n        subscriptionsMovies = members.map(member =>{\r\n            let memberSubscribesMovies;  //all movies the member watched already (the movie's id and watched date)\r\n            let memberMovies;   //all movies the member watched already (include the movie's data)\r\n            let subscribeMoviesIds = [];    //all the subscribes's movies id (per member)\r\n            let unsubscribedMovies = [];    //unwatched movies for member\r\n            let subscription = subscriptions.filter(s => s.memberId === member._id);\r\n            if(subscription.length > 0){\r\n                memberSubscribesMovies = subscription[0].movies;\r\n                let movie;\r\n\r\n                if(memberSubscribesMovies !== undefined){\r\n                    memberMovies = memberSubscribesMovies.map(mi =>{\r\n                        subscribeMoviesIds.push(mi.movieId)\r\n                        movie = movies.filter(m => mi.movieId === m._id);\r\n                        if(movie.length > 0){\r\n                            return {\r\n                                \"id\" : movie[0]._id,\r\n                                \"watchedDate\" : mi.date\r\n                            }\r\n                        }\r\n                        \r\n                    })\r\n\r\n                    movies.forEach(m => {\r\n                        if(!subscribeMoviesIds.includes(m._id)){\r\n                            unsubscribedMovies.push({'id': m._id});\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else{\r\n                unsubscribedMovies = movies.map(m =>{\r\n                    return {\r\n                        'id': m._id\r\n                    }\r\n                })\r\n            }\r\n\r\n            return {\r\n                \"id\" : member._id,\r\n                \"name\" : member.name,\r\n                \"email\" : member.email,\r\n                \"city\" : member.city,\r\n                \"movies\" : memberMovies !== undefined ? memberMovies : [],\r\n                \"unwatched\" : unsubscribedMovies\r\n            }\r\n        })\r\n    }\r\n\r\n    return subscriptionsMovies;\r\n\r\n}\r\n\r\nconst getMoviesSubscriptions = async () => {\r\n    let moviesSubscribers = null; //the movies's subscriptions (each movie and it's subscribers)\r\n    let membersResp = await membersUtils.loadMembers();\r\n    let moviesResp = await moviesUtils.loadMovies();\r\n    let subscriptionsResp = await getSubscriptions();\r\n    let members, movies, subscriptions;\r\n\r\n    if(moviesResp){\r\n        movies = moviesResp.movies;\r\n    }\r\n    \r\n    if(membersResp){\r\n        members = membersResp.members;\r\n    }\r\n\r\n    if(subscriptionsResp){\r\n        subscriptions = subscriptionsResp.subscriptions;\r\n    }\r\n\r\n    if(subscriptions && movies && members)\r\n    {\r\n        moviesSubscribers = movies.map(movie => {\r\n            let subscribersToMovie = [];\r\n            subscriptions.forEach(s =>{\r\n                let subscribedMovies = s.movies;\r\n                let subscribedMovie = subscribedMovies.filter(sm => sm.movieId === movie._id);\r\n                if(subscribedMovie.length > 0){\r\n                    let memberId = s.memberId;\r\n                    let member = members.filter(mem => mem._id === memberId);\r\n                    if(member.length > 0){\r\n                        let subscribe = {\r\n                            id : memberId,\r\n                            dateWatched : subscribedMovie[0].date\r\n                        }\r\n\r\n                        subscribersToMovie.push(subscribe);\r\n                    }\r\n                }\r\n            })\r\n            return{\r\n                id : movie._id,\r\n                subscribersToMovie\r\n    \r\n            }\r\n        });\r\n    }\r\n        \r\n    return moviesSubscribers;\r\n\r\n}\r\n\r\nconst subscribeToMovie = async (subscribedMovie) =>{\r\n    let resp = await axios.post(subscriptionsUrl, subscribedMovie);\r\n    return resp.data;\r\n\r\n}\r\n\r\nexport default {getSubscriptions, getMembersSubscriptions, getMoviesSubscriptions, subscribeToMovie};","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\SubscribeToMovieComp.js",[],["220","221"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MembersComp.js",["222","223","224"],"import React, {useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Member from './MemberComp';\r\nimport MemberMenu from './menu/MemberMenu';\r\n\r\nfunction MembersComp(props) {\r\n    const members = useSelector(state => state.members);\r\n    const [displayMembers, setDispalyMembers] = useState(members)\r\n    const msg = useSelector(state => state.msg)\r\n    const [hasPermission, setHasPermission] =useState((sessionStorage.getItem(\"permissions\") !== null && sessionStorage.getItem(\"permissions\").includes('View Subscriptions')))\r\n    \r\n    useEffect(() => {\r\n        let memberId = props.match.params.id;\r\n        if(memberId !== undefined){\r\n            let member = members.filter(m => m._id === memberId);\r\n            if(member.length > 0)\r\n            {\r\n                setDispalyMembers(member)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='members services'>\r\n            <MemberMenu/>\r\n            <h1>All Members Subscriptions</h1>\r\n            {msg}\r\n            {\r\n                !hasPermission ? \r\n                <div>You have no permission to view members</div>\r\n                :\r\n                <div className='subscribers'>\r\n                    \r\n    \r\n                    {\r\n                        displayMembers.map(m =>{\r\n                            return <Member key={m._id} member={m} />\r\n    \r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default MembersComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\globalUtil.js",["225"],"const getHeader = () =>{\r\n    const token = sessionStorage.getItem(\"id\");\r\n    const header = {headers: \r\n                        {\"Authorization\" : `Bearer ${token}`}\r\n                    }\r\n    return header;\r\n}\r\n\r\nexport default {getHeader};",{"ruleId":"226","severity":1,"message":"227","line":16,"column":8,"nodeType":"228","messageId":"229","endLine":16,"endColumn":23},{"ruleId":"226","severity":1,"message":"230","line":17,"column":8,"nodeType":"228","messageId":"229","endLine":17,"endColumn":15},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"226","severity":1,"message":"235","line":4,"column":9,"nodeType":"228","messageId":"229","endLine":4,"endColumn":17},{"ruleId":"226","severity":1,"message":"236","line":34,"column":7,"nodeType":"228","messageId":"229","endLine":34,"endColumn":24},{"ruleId":"226","severity":1,"message":"237","line":35,"column":7,"nodeType":"228","messageId":"229","endLine":35,"endColumn":24},{"ruleId":"238","severity":1,"message":"239","line":115,"column":8,"nodeType":"240","endLine":115,"endColumn":10,"suggestions":"241"},{"ruleId":"226","severity":1,"message":"242","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":20},{"ruleId":"226","severity":1,"message":"243","line":12,"column":27,"nodeType":"228","messageId":"229","endLine":12,"endColumn":43},{"ruleId":"244","severity":1,"message":"245","line":27,"column":28,"nodeType":"246","messageId":"247","endLine":27,"endColumn":30},{"ruleId":"238","severity":1,"message":"248","line":33,"column":8,"nodeType":"240","endLine":33,"endColumn":10,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":73,"column":1,"nodeType":"252","endLine":73,"endColumn":67},{"ruleId":"226","severity":1,"message":"253","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":13},{"ruleId":"231","replacedBy":"254"},{"ruleId":"233","replacedBy":"255"},{"ruleId":"226","severity":1,"message":"256","line":1,"column":26,"nodeType":"228","messageId":"229","endLine":1,"endColumn":35},{"ruleId":"226","severity":1,"message":"257","line":3,"column":23,"nodeType":"228","messageId":"229","endLine":3,"endColumn":34},{"ruleId":"226","severity":1,"message":"258","line":15,"column":11,"nodeType":"228","messageId":"229","endLine":15,"endColumn":23},{"ruleId":"238","severity":1,"message":"259","line":15,"column":6,"nodeType":"240","endLine":15,"endColumn":8,"suggestions":"260"},{"ruleId":"250","severity":1,"message":"251","line":36,"column":1,"nodeType":"252","endLine":36,"endColumn":82},{"ruleId":"261","severity":1,"message":"262","line":48,"column":54,"nodeType":"263","endLine":48,"endColumn":82},{"ruleId":"238","severity":1,"message":"264","line":29,"column":8,"nodeType":"240","endLine":29,"endColumn":10,"suggestions":"265"},{"ruleId":"226","severity":1,"message":"266","line":12,"column":8,"nodeType":"228","messageId":"229","endLine":12,"endColumn":12},{"ruleId":"226","severity":1,"message":"267","line":17,"column":10,"nodeType":"228","messageId":"229","endLine":17,"endColumn":15},{"ruleId":"226","severity":1,"message":"268","line":24,"column":35,"nodeType":"228","messageId":"229","endLine":24,"endColumn":59},{"ruleId":"226","severity":1,"message":"269","line":25,"column":35,"nodeType":"228","messageId":"229","endLine":25,"endColumn":59},{"ruleId":"261","severity":1,"message":"262","line":109,"column":37,"nodeType":"263","endLine":109,"endColumn":85},{"ruleId":"226","severity":1,"message":"243","line":35,"column":27,"nodeType":"228","messageId":"229","endLine":35,"endColumn":43},{"ruleId":"238","severity":1,"message":"270","line":126,"column":8,"nodeType":"240","endLine":126,"endColumn":10,"suggestions":"271"},{"ruleId":"226","severity":1,"message":"268","line":22,"column":35,"nodeType":"228","messageId":"229","endLine":22,"endColumn":59},{"ruleId":"226","severity":1,"message":"269","line":23,"column":35,"nodeType":"228","messageId":"229","endLine":23,"endColumn":59},{"ruleId":"272","severity":1,"message":"273","line":30,"column":36,"nodeType":"274","messageId":"275","endLine":30,"endColumn":37,"suggestions":"276"},{"ruleId":"272","severity":1,"message":"273","line":30,"column":61,"nodeType":"274","messageId":"275","endLine":30,"endColumn":62,"suggestions":"277"},{"ruleId":"238","severity":1,"message":"278","line":66,"column":8,"nodeType":"240","endLine":66,"endColumn":10,"suggestions":"279"},{"ruleId":"226","severity":1,"message":"243","line":13,"column":27,"nodeType":"228","messageId":"229","endLine":13,"endColumn":43},{"ruleId":"272","severity":1,"message":"273","line":29,"column":36,"nodeType":"274","messageId":"275","endLine":29,"endColumn":37,"suggestions":"280"},{"ruleId":"272","severity":1,"message":"273","line":29,"column":61,"nodeType":"274","messageId":"275","endLine":29,"endColumn":62,"suggestions":"281"},{"ruleId":"250","severity":1,"message":"251","line":73,"column":1,"nodeType":"252","endLine":73,"endColumn":71},{"ruleId":"244","severity":1,"message":"245","line":47,"column":43,"nodeType":"246","messageId":"247","endLine":47,"endColumn":45},{"ruleId":"282","severity":1,"message":"283","line":48,"column":66,"nodeType":"284","messageId":"285","endLine":48,"endColumn":68},{"ruleId":"250","severity":1,"message":"251","line":96,"column":1,"nodeType":"252","endLine":96,"endColumn":64},{"ruleId":"226","severity":1,"message":"256","line":1,"column":16,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"286","line":8,"column":8,"nodeType":"228","messageId":"229","endLine":8,"endColumn":25},{"ruleId":"226","severity":1,"message":"287","line":13,"column":11,"nodeType":"228","messageId":"229","endLine":13,"endColumn":19},{"ruleId":"231","replacedBy":"288"},{"ruleId":"233","replacedBy":"289"},{"ruleId":"282","severity":1,"message":"283","line":128,"column":66,"nodeType":"284","messageId":"285","endLine":128,"endColumn":68},{"ruleId":"250","severity":1,"message":"251","line":227,"column":1,"nodeType":"252","endLine":227,"endColumn":102},{"ruleId":"231","replacedBy":"290"},{"ruleId":"233","replacedBy":"291"},{"ruleId":"226","severity":1,"message":"292","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":21},{"ruleId":"226","severity":1,"message":"243","line":11,"column":27,"nodeType":"228","messageId":"229","endLine":11,"endColumn":43},{"ruleId":"238","severity":1,"message":"293","line":22,"column":8,"nodeType":"240","endLine":22,"endColumn":10,"suggestions":"294"},{"ruleId":"250","severity":1,"message":"251","line":9,"column":1,"nodeType":"252","endLine":9,"endColumn":28},"no-unused-vars","'autoMergeLevel2' is defined but never used.","Identifier","unusedVar","'hardSet' is defined but never used.","no-native-reassign",["295"],"no-negated-in-lhs",["296"],"'Redirect' is defined but never used.","'NO_PERMISSION_MSG' is assigned a value but never used.","'CONTACT_ADMIN_MSG' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'members.length', 'membersSubscriptions.length', 'movies.length', 'moviesSubscribers.length', 'subscriptions.length', and 'users.length'. Either include them or remove the dependency array.","ArrayExpression",["297"],"'useHistory' is defined but never used.","'setHasPermission' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'movieResult' and 'props.match.params.id'. Either include them or remove the dependency array.",["298"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CompB' is defined but never used.",["295"],["296"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'userFullName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.",["299"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'formik', 'props.match.params.id', and 'users'. Either include them or remove the dependency array.",["300"],"'Card' is defined but never used.","'green' is defined but never used.","'setHasPermissionToDelete' is assigned a value but never used.","'setHasPermissionToUpdate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formik', 'movies', and 'props.match.params.id'. Either include them or remove the dependency array.",["301"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["302","303"],["304","305"],"React Hook useEffect has missing dependencies: 'formik', 'members', and 'props.match.params.id'. Either include them or remove the dependency array.",["306"],["307","308"],["309","310"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'subscriptionsUtil' is defined but never used.","'dispatch' is assigned a value but never used.",["295"],["296"],["295"],["296"],"'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'members' and 'props.match.params.id'. Either include them or remove the dependency array.",["311"],"no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"messageId":"322","fix":"323","desc":"324"},{"messageId":"325","fix":"326","desc":"327"},{"messageId":"322","fix":"328","desc":"324"},{"messageId":"325","fix":"329","desc":"327"},{"desc":"330","fix":"331"},{"messageId":"322","fix":"332","desc":"324"},{"messageId":"325","fix":"333","desc":"327"},{"messageId":"322","fix":"334","desc":"324"},{"messageId":"325","fix":"335","desc":"327"},{"desc":"336","fix":"337"},"Update the dependencies array to be: [dispatch, members.length, membersSubscriptions.length, movies.length, moviesSubscribers.length, subscriptions.length, users.length]",{"range":"338","text":"339"},"Update the dependencies array to be: [movieResult, props.match.params.id]",{"range":"340","text":"341"},"Update the dependencies array to be: [props.location.state]",{"range":"342","text":"343"},"Update the dependencies array to be: [formik, props.match.params.id, users]",{"range":"344","text":"345"},"Update the dependencies array to be: [formik, movies, props.match.params.id]",{"range":"346","text":"347"},"removeEscape",{"range":"348","text":"349"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"350","text":"351"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"352","text":"349"},{"range":"353","text":"351"},"Update the dependencies array to be: [formik, members, props.match.params.id]",{"range":"354","text":"355"},{"range":"356","text":"349"},{"range":"357","text":"351"},{"range":"358","text":"349"},{"range":"359","text":"351"},"Update the dependencies array to be: [members, props.match.params.id]",{"range":"360","text":"361"},[3746,3748],"[dispatch, members.length, membersSubscriptions.length, movies.length, moviesSubscribers.length, subscriptions.length, users.length]",[1225,1227],"[movieResult, props.match.params.id]",[429,431],"[props.location.state]",[1026,1028],"[formik, props.match.params.id, users]",[3716,3718],"[formik, movies, props.match.params.id]",[944,945],"",[944,944],"\\",[969,970],[969,969],[2169,2171],"[formik, members, props.match.params.id]",[1037,1038],[1037,1037],[1062,1063],[1062,1062],[882,884],"[members, props.match.params.id]"]