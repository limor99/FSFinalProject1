[{"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\index.js":"1","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\App.js":"2","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\reportWebVitals.js":"3","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MoviesComp.js":"4","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Redux\\reducer.js":"5","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\movieUtil.js":"6","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompA.js":"7","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompB.js":"8","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompC.js":"9","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\WelcomeComp.js":"10","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\LoginComp.js":"11","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\MainComp.js":"12","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\usersUtil.js":"13","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\HeaderComp.js":"14","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MembersComp.js":"15","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\AddUserComp.js":"16","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\CreateAccountComp.js":"17","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\customField\\PermossionComp.js":"18","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\customField\\PermossionComp1.js":"19","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UsersComp.js":"20","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\header\\UserHeader.js":"21","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UserComp.js":"22","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\EditUserComp.js":"23"},{"size":1516,"mtime":1615280694412,"results":"24","hashOfConfig":"25"},{"size":2545,"mtime":1615109414360,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":628,"mtime":1614679056505,"results":"28","hashOfConfig":"25"},{"size":1727,"mtime":1614853823672,"results":"29","hashOfConfig":"25"},{"size":241,"mtime":1612357614626,"results":"30","hashOfConfig":"25"},{"size":630,"mtime":1612455879221,"results":"31","hashOfConfig":"25"},{"size":341,"mtime":1612423971804,"results":"32","hashOfConfig":"25"},{"size":346,"mtime":1612455798597,"results":"33","hashOfConfig":"25"},{"size":397,"mtime":1612825504219,"results":"34","hashOfConfig":"25"},{"size":2381,"mtime":1614873007941,"results":"35","hashOfConfig":"25"},{"size":768,"mtime":1613470079089,"results":"36","hashOfConfig":"25"},{"size":1070,"mtime":1614848382574,"results":"37","hashOfConfig":"25"},{"size":666,"mtime":1614675248614,"results":"38","hashOfConfig":"25"},{"size":171,"mtime":1613462173390,"results":"39","hashOfConfig":"25"},{"size":12424,"mtime":1614876658572,"results":"40","hashOfConfig":"25"},{"size":1452,"mtime":1614673135768,"results":"41","hashOfConfig":"25"},{"size":1413,"mtime":1614183296187,"results":"42","hashOfConfig":"25"},{"size":1265,"mtime":1614160898301,"results":"43","hashOfConfig":"25"},{"size":644,"mtime":1614848264441,"results":"44","hashOfConfig":"25"},{"size":547,"mtime":1614676812105,"results":"45","hashOfConfig":"25"},{"size":1736,"mtime":1615111721310,"results":"46","hashOfConfig":"25"},{"size":9600,"mtime":1615278146382,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1221art",{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\index.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\App.js",["107","108"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\reportWebVitals.js",[],["109","110"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\movies\\MoviesComp.js",["111","112"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction MoviesComp(props) {\r\n    \r\n    const movies = useSelector( state => state.movies);\r\n    //const counter = useSelector( state => state.counter);\r\n    //console.log('movies: ' + movies.length)\r\n        \r\n    return (\r\n        \r\n      <div className=\"App\">\r\n        All Movies:\r\n\r\n        <div>\r\n            {\r\n                movies.map((m, index) =>{\r\n                    return <li key={index} >{m.name}</li>\r\n                })\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n  \r\n  export default MoviesComp;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Redux\\reducer.js",["113","114"],"import { act } from '@testing-library/react';\r\nimport movieUtil from '../../src/Utils/movieUtil';\r\n\r\nfunction reducer(state = { users : [], movies : [{name : \"aaa\"}], counter: 0, userFullName: '', msg: ''}, action){\r\n    let currentUsers = state.users;\r\n    let newUsersArr = null;\r\n\r\n    switch (action.type){\r\n        case \"LoadData\":\r\n            let movies = action.payload;\r\n           // let movies3 = movies.slice(0, 2);\r\n          // console.log(\" mpvies in payload\")\r\n\r\n           // console.table(movies);\r\n\r\n                let currentMovies = state.movies;\r\n                currentMovies = currentMovies.concat(movies)\r\n            //    console.log(\"all movies after we load\")\r\n             //   console.log(currentMovies)\r\n\r\n                return { ...state, movies: currentMovies};\r\n        case \"LoadUsers\":\r\n            let users = action.payload;\r\n            newUsersArr = [...currentUsers, ...users];\r\n\r\n            return {...state, users : newUsersArr};\r\n        \r\n        case \"AddUser\":\r\n            let newUser = action.payload;\r\n            newUsersArr = [...currentUsers, newUser];\r\n\r\n            return {...state, users : newUsersArr};\r\n            \r\n        case \"DeleteUser\":\r\n            let userId = action.payload;\r\n            let updatedUsers = currentUsers.filter(u => u.id !== userId);\r\n\r\n            return {...state, users : updatedUsers};\r\n\r\n        case \"UpdateMsg\":\r\n            let newMsg = action.payload;\r\n             return {...state, msg: newMsg}\r\n\r\n        case \"updateUserFullName\":\r\n            let userFullName = action.payload;\r\n\r\n            return { ...state, userFullName: userFullName};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\movieUtil.js",["115"],"import axios from 'axios';\r\n\r\nconst moviesUrl = 'http://localhost:5000/api/movies/';\r\n                   \r\nconst loadMovies = async() =>{\r\n    let resp = await axios.get(moviesUrl);\r\n    return resp.data;\r\n}\r\n\r\nexport default { loadMovies };","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompA.js",["116"],"import React  from 'react';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport CompB from '../Components/CompB'\r\nimport CompC from '../Components/CompC'\r\n\r\nfunction CompA(props) {\r\n    const dispatch = useDispatch();\r\n    \r\n      \r\n     \r\n    return (\r\n        \r\n      <div className=\"App\">\r\n    \r\nComp A\r\n        <div>\r\n     \r\n        <button onClick={ () =>{\r\n            console.log(\"in counter\")\r\n            dispatch({\r\n                type : \"LoadData\"\r\n            })\r\n        } }>+</button>\r\n\r\n        <br/>\r\n\r\n        <CompC/>\r\n\r\n        </div>\r\n    \r\n\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default CompA;",["117","118"],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompB.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\CompC.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\WelcomeComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\LoginComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\MainComp.js",["119"],"import React from 'react';\r\n\r\nimport usersUtil from '../Utils/usersUtil';\r\n\r\nimport Header from '../Components/HeaderComp';\r\nimport Movies from '../Components/movies/MoviesComp';\r\n\r\nfunction MainComp() {\r\n\r\n async function test(){\r\n    let token = sessionStorage.getItem(\"user\");\r\n    /*let test ={\r\n      foo: \"foo\"\r\n  }*/\r\n\r\n  let resp = await usersUtil.test(token);\r\n  \r\n  if(resp.success){\r\n      console({resp})\r\n  }\r\n  else{\r\n    console.log(\"ERRor\")\r\n  }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {sessionStorage.getItem(\"userName\") ? <Header userName={sessionStorage.getItem(\"userName\")}/> : ''}\r\n      <h1>Main page</h1>\r\n\r\n\r\n\r\n\r\n<button type=\"button\" onClick={test} >test</button>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n  \r\n  export default MainComp;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Utils\\usersUtil.js",["120"],"import axios from 'axios';\r\nconst usersUrl = \"http://localhost:5000/api/users/\";\r\n\r\nconst login = async (userLogin) =>{\r\n    console.log(userLogin)    \r\n    let resp = await axios.post(`${usersUrl}login`, userLogin);\r\n//console.log(resp)\r\n    return resp.data;\r\n}\r\n\r\nconst createAccount = async (createdUser) =>{\r\n    let resp = await axios.post(`${usersUrl}createAccount`, createdUser);\r\n    return resp.data;\r\n}\r\n\r\nconst addUser = async (newUser) =>{\r\n    let resp = await axios.post(`${usersUrl}add`, newUser);\r\n    return resp.data;\r\n}\r\n\r\nconst deleteUser = async (id) =>{\r\n    let resp = await axios.delete(`${usersUrl}${id}`);\r\n    return resp.data;\r\n}\r\n\r\nconst getUsers = async () =>{\r\n    let resp = await axios.get(`${usersUrl}`);\r\n    return resp.data;\r\n}\r\n\r\n\r\n\r\nconst test = async (token) =>{\r\n\r\n   // console.log(test)    \r\n    let resp = await axios.post(`${usersUrl}test`, token, {headers: {\"Authorization\" : `Bearer ${token}`}});\r\n//console.log(resp)\r\n    return resp.data;\r\n}\r\n\r\nexport default {login, createAccount, addUser, test, getUsers, deleteUser};","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\HeaderComp.js",["121","122"],"import React, { useState, useEffect } from 'react'\r\nimport './HeaderComp.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction HeaderComp(props){\r\n    \r\n    return(\r\n        <div>\r\n            <ul>\r\n                <li>logo</li>&nbsp;&nbsp;\r\n                <li><Link to='movies'>Movies</Link></li>&nbsp;&nbsp;\r\n                <li><Link to='subscriptions'>Subscriptions</Link></li>&nbsp;&nbsp;\r\n                <li><Link to='users'>User's Management</Link></li>&nbsp;&nbsp;\r\n                <li>{props.userFullName !== '' ? `Hello ${props.userFullName}` : ''}</li>&nbsp;&nbsp;\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderComp;","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\subscriptions\\MembersComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\AddUserComp.js",["123"],"import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport UserHeader from './header/UserHeader';\r\nimport usersUtil from '../../Utils/usersUtil';\r\n\r\nfunction AddUserComp() {\r\n    //const [msg, setMsg] = useState('');\r\n    const msg = useSelector(state => state.msg);\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            sessionTimeOut: 0,\r\n            permissions: {\r\n                viewSubscriptions: false,\r\n                createSubscriptions: false,\r\n                deleteSubscriptions: false,\r\n                updateSubscriptions: false,\r\n                viewMovies: false,\r\n                createMovies: false,\r\n                deleteMovies: false,\r\n                updateMovies: false\r\n            },\r\n        },\r\n        validationSchema: Yup.object({\r\n            firstName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            lastName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            username: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(10, 'Too Long!')\r\n              .required('Required'),\r\n            sessionTimeOut: Yup.number()\r\n              .min(1, 'Must be more than 0 sec')\r\n              .max(60, 'Must be less than 60 sec')\r\n              .integer()\r\n              .positive()\r\n              .required('Required'),\r\n            permissions: Yup.object({\r\n                viewSubscriptions: Yup.boolean(),\r\n                createSubscriptions: Yup.boolean(),\r\n                deleteSubscriptions: Yup.boolean(),\r\n                updateSubscriptions: Yup.boolean(),\r\n                viewMovies: Yup.boolean(),\r\n                createMovies: Yup.boolean(),\r\n                deleteMovies: Yup.boolean(),\r\n                updateMovies: Yup.boolean()\r\n              }).test('permission-validation', 'Choose at list 1 permission', values => values.viewSubscriptions || values.createSubscriptions || \r\n                values.deleteSubscriptions || values.updateSubscriptions || values.viewMovies || values.createMovies || values.deleteMovies ||\r\n                values.updateMovies)\r\n            }),\r\n        onSubmit: async (values) => {\r\n            let resp = await usersUtil.addUser(values);\r\n\r\n            let checkedPermissions = Object.keys(values.permissions).filter(p => values.permissions[p])\r\n            \r\n            if(resp.success){\r\n                values.id = resp.id;\r\n                values.permissions = checkedPermissions;\r\n                dispatch({\r\n                    type: \"AddUser\",\r\n                    payload: values\r\n                })\r\n\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n\r\n                history.push('/users');\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n            }\r\n            \r\n            // setMsg(resp.msg);\r\n        },\r\n    });\r\n\r\n    const handleChange = (e) =>{\r\n        formik.handleChange(e);\r\n        const {name, checked} = e.target;\r\n\r\n        formik.values.permissions[name] = checked;\r\n\r\n        //let permissionsToUpdate = {[name]: checked}\r\n        \r\n        if(name === 'createSubscriptions' || name === 'deleteSubscriptions' || name === 'updateSubscriptions'){\r\n            if(checked || (!checked && !formik.values.permissions.createSubscriptions && !formik.values.permissions.deleteSubscriptions && !formik.values.permissions.updateSubscriptions )){\r\n                formik.values.permissions.viewSubscriptions = checked;\r\n                //permissionsToUpdate = { ...permissionsToUpdate, 'viewSubscriptions': checked}\r\n            }\r\n        }\r\n        else if(name === 'createMovies' || name === 'deleteMovies' || name === 'updateMovies'){\r\n            if(checked || (!checked && !formik.values.permissions.createMovies && !formik.values.permissions.deleteMovies && !formik.values.updateMovies )){\r\n                formik.values.permissions.viewMovies = checked;\r\n                //permissionsToUpdate = { ...permissionsToUpdate, 'viewMovies': checked}\r\n            }\r\n\r\n        }\r\n        else if(name === 'viewSubscriptions'){\r\n            if(!checked){\r\n                formik.values.permissions.createSubscriptions = false;\r\n                formik.values.permissions.deleteSubscriptions = false;\r\n                formik.values.permissions.updateSubscriptions = false;\r\n\r\n                /*let cancelCheckedPermissions = {createSubscriptions : false,\r\n                                                deleteSubscriptions : false,\r\n                                                updateSubscriptions : false}\r\n\r\n                permissionsToUpdate = { ...permissionsToUpdate, ...cancelCheckedPermissions }*/\r\n            }\r\n        }\r\n        else if(name === 'viewMovies'){\r\n            if(!checked){\r\n                formik.values.permissions.createMovies = false;\r\n                formik.values.permissions.deleteMovies = false;\r\n                formik.values.permissions.updateMovies = false;\r\n\r\n               /* let cancelCheckedPermissions = {createMovies : false,\r\n                                                deleteMovies : false,\r\n                                                updateMovies : false}\r\n\r\n                permissionsToUpdate = { ...permissionsToUpdate, ...cancelCheckedPermissions }*/\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n             <UserHeader/>\r\n            {msg}\r\n            <form onSubmit={formik.handleSubmit}>\r\n                \r\n                <label htmlFor='firstName'>First Name</label>\r\n                <input\r\n                    id='firstName'\r\n                    name='firstName'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.firstName}\r\n                />\r\n                {formik.touched.firstName && formik.errors.firstName ? (\r\n                    <div>{formik.errors.firstName}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='lastName'>Last Name</label>\r\n                <input\r\n                    id='lastName'\r\n                    name='lastName'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.lastName}\r\n                />\r\n                {formik.touched.lastName && formik.errors.lastName ? (\r\n                    <div>{formik.errors.lastName}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='userName'>UserName</label>\r\n                <input\r\n                    id='username'\r\n                    name='username'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.username}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                    <div>{formik.errors.username}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='sessionTimeOut'>Session Time Out</label>\r\n                <input\r\n                    id='sessionTimeOut'\r\n                    name='sessionTimeOut'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.sessionTimeOut}\r\n                />\r\n                {formik.touched.sessionTimeOut && formik.errors.sessionTimeOut ? (\r\n                    <div>{formik.errors.sessionTimeOut}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n\r\n                Permission: <br/>\r\n                    \r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={<Checkbox value={formik.values.permissions} checked={formik.values.permissions.viewSubscriptions}  onChange={handleChange} id='viewSubscriptions' name='viewSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='View Subscriptions'\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value={formik.values.permissions} checked={formik.values.permissions.createSubscriptions} onChange={handleChange} id='createSubscriptions' name='createSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Create Subscriptions'\r\n                    />\r\n                                        <FormControlLabel\r\n                        control={<Checkbox value={formik.values.permissions} checked={formik.values.permissions.deleteSubscriptions} onChange={handleChange} id='deleteSubscriptions' name='deleteSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Delete Subscriptions'\r\n                    />\r\n                                        <FormControlLabel\r\n                        control={<Checkbox value={formik.values.permissions} checked={formik.values.permissions.updateSubscriptions} onChange={handleChange} id='updateSubscriptions' name='updateSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Update Subscriptions'\r\n                    />\r\n                                        <FormControlLabel\r\n                        control={<Checkbox value={formik.values.permissions} checked={formik.values.permissions.viewMovies} onChange={handleChange} id='viewMovies' name='viewMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='View Movies'\r\n                    />\r\n                                        <FormControlLabel\r\n                        control={<Checkbox value={formik.values.permissions} checked={formik.values.permissions.createMovies} onChange={handleChange} id='createMovies' name='createMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Create Movies'\r\n                    />\r\n                                        <FormControlLabel\r\n                        control={<Checkbox value={formik.values.permissions} checked={formik.values.permissions.deleteMovies} onChange={handleChange} id='deleteMovies' name='deleteMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Delete Movies'\r\n                    />\r\n                                        <FormControlLabel\r\n                        control={<Checkbox value={formik.values.permissions} checked={formik.values.permissions.updateMovies} onChange={handleChange} id='updateMovies' name='updateMovies' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='Update Movies'\r\n                    />\r\n                    {formik.touched.permissions && formik.errors.permissions ? (\r\n                        <div>{formik.errors.permissions}</div>\r\n                    ) : null}\r\n                \r\n                </FormGroup>\r\n\r\n\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default AddUserComp;\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\CreateAccountComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\customField\\PermossionComp.js",["124"],"import React from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { computeHeadingLevel } from '@testing-library/react';\r\n\r\n\r\nfunction PermossionComp(props) {\r\n\r\n    const handleChange = (checked) =>{\r\n        console.log(checked)\r\n    }\r\n   \r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                checked: [],\r\n            }}\r\n            onSubmit={(values) => {\r\n                alert(values.checked);\r\n            }}\r\n            \r\n        >\r\n            \r\n        {({ values, onChange }) => (\r\n            \r\n            <Form>\r\n               \r\n                <div id=\"checkbox-group\">Checked</div>\r\n                <div role=\"group\" aria-labelledby=\"checkbox-group\"  >\r\n                    <label>\r\n                    <Field type=\"checkbox\" name=\"checked\" value=\"One\" handleChange={handleChange} />\r\n                    One\r\n                    </label>\r\n                    <label>\r\n                    <Field type=\"checkbox\" name=\"checked\" value=\"Two\" />\r\n                    Two\r\n                    </label>\r\n                    <label>\r\n                    <Field type=\"checkbox\" name=\"checked\" value=\"Three\" />\r\n                    Three\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\">Submit</button>\r\n\r\n            </Form>\r\n        )}\r\n            \r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default PermossionComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\customField\\PermossionComp1.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UsersComp.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\header\\UserHeader.js",[],"C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\UserComp.js",["125","126","127"],"import React, {useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport UserHeader from './header/UserHeader';\r\n\r\nimport usersUtil from '../../Utils/usersUtil';\r\n\r\nimport './UserComp.css';\r\n\r\nfunction UserComp(props) {\r\n    const [msg, setMsg] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteUser = async (id) =>{\r\n        let response = await usersUtil.deleteUser(id);\r\n        if(response.success){\r\n            dispatch({\r\n                type: \"DeleteUser\",\r\n                payload: id\r\n            })\r\n        }\r\n        else{\r\n            dispatch({\r\n                type: \"UpdateMsg\",\r\n                payload: response.msg\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div className='user'>\r\n            name: {props.user.firstName} {props.user.lastName}<br/>\r\n            usernme: {props.user.username}<br/>\r\n            SessionTimeout: {props.user.sessionTimeOut}<br/>\r\n            Created Date : {props.user.createdDate}<br/>\r\n            permissions : \r\n            {\r\n                props.user.permissions.map((p, i) =>{\r\n                    let permissionLen = props.user.permissions.length;\r\n                    if(i !== permissionLen-1){\r\n                        return (' ' + p + ',');\r\n                    }\r\n                    else{\r\n                        return (' ' + p);\r\n                    }\r\n                    \r\n                })\r\n            }\r\n            <br/>\r\n            \r\n            <button><Link to={`/user/${props.user.id}`}>Edit</Link></button>\r\n            <input type=\"button\" value=\"Delete\" onClick={() => deleteUser(props.user.id)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserComp\r\n","C:\\mern_course\\FSFinalProject1\\CinemaFE\\cinemaapp\\src\\Components\\users\\EditUserComp.js",["128","129","130","131"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport UserHeader from './header/UserHeader';\r\nimport usersUtil from '../../Utils/usersUtil';\r\n\r\nfunction EditUserComp(props) {\r\n    console.log('1111111111 ')\r\n    //const [userId, setUserId] = useState('');\r\n    const [user, setUser] = useState();\r\n    //console.log('1111111111aaaaa ', users)\r\n    const users = useSelector(state => state.users);\r\n    console.log('1111111111bbbbb ', users)\r\n    const msg = useSelector(state => state.msg);\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log('2222222222222 ' , formik.values)\r\n        let userId = props.match.params.id;\r\n        console.log('2222222222222aaaaa' , userId)\r\n        let user = users.filter(u => u.id === userId)[0];\r\n        console.log('2222222222222bbbbb' , user)\r\n        formik.values.firstName = user.firstName;\r\n        formik.values.lastName = user.lastName;\r\n        formik.values.username = user.username;\r\n        formik.values.sessionTimeOut = user.sessionTimeOut;\r\n        formik.values.permissions = user.permissions;\r\n\r\n        \r\n       // console.log('2222222222222bbb ' , formik.values)\r\n        setUser(user);\r\n        \r\n    }, [])\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            sessionTimeOut: 0,\r\n            permissions: {\r\n                viewSubscriptions: false,\r\n                createSubscriptions: false,\r\n                deleteSubscriptions: false,\r\n                updateSubscriptions: false,\r\n                viewMovies: false,\r\n                createMovies: false,\r\n                deleteMovies: false,\r\n                updateMovies: false\r\n            },\r\n        },\r\n        validationSchema: Yup.object({\r\n            firstName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            lastName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(50, 'Too Long!')\r\n              .required('Required'),\r\n            username: Yup.string()\r\n              .min(3, 'Too Short!')\r\n              .max(10, 'Too Long!')\r\n              .required('Required'),\r\n            sessionTimeOut: Yup.number()\r\n              .min(1, 'Must be more than 0 sec')\r\n              .max(60, 'Must be less than 60 sec')\r\n              .integer()\r\n              .positive()\r\n              .required('Required'),\r\n            permissions: Yup.object({\r\n                viewSubscriptions: Yup.boolean(),\r\n                createSubscriptions: Yup.boolean(),\r\n                deleteSubscriptions: Yup.boolean(),\r\n                updateSubscriptions: Yup.boolean(),\r\n                viewMovies: Yup.boolean(),\r\n                createMovies: Yup.boolean(),\r\n                deleteMovies: Yup.boolean(),\r\n                updateMovies: Yup.boolean()\r\n              }).test('permission-validation', 'Choose at list 1 permission', values => values.viewSubscriptions || values.createSubscriptions || \r\n                values.deleteSubscriptions || values.updateSubscriptions || values.viewMovies || values.createMovies || values.deleteMovies ||\r\n                values.updateMovies)\r\n            }),\r\n        onSubmit: async (values) => {\r\n           // console.log('cvb', values)\r\n            /*\r\n            let resp = await usersUtil.addUser(values);\r\n\r\n            let checkedPermissions = Object.keys(values.permissions).filter(p => values.permissions[p])\r\n            \r\n            if(resp.success){\r\n                values.id = resp.id;\r\n                values.permissions = checkedPermissions;\r\n                dispatch({\r\n                    type: \"AddUser\",\r\n                    payload: values\r\n                })\r\n\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n\r\n                history.push('/users');\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: \"UpdateMsg\",\r\n                    payload: resp.msg\r\n                })\r\n            }\r\n            \r\n            */\r\n        },\r\n    });\r\n\r\n    const inputTextHandleChange = (e) =>{\r\n        //console.log(e.target.name);\r\n        //formik.handleChange(e);\r\n        console.log(formik.values);\r\n        let name = e.target.name;\r\n        formik.values[name] = e.target.value;\r\n        console.log('inside' + formik.values);\r\n    }\r\n\r\n    const handleChange = (e) =>{\r\n        /*\r\n        formik.handleChange(e);\r\n        const {name, checked} = e.target;\r\n\r\n        formik.values.permissions[name] = checked;\r\n\r\n        if(name === 'createSubscriptions' || name === 'deleteSubscriptions' || name === 'updateSubscriptions'){\r\n            if(checked || (!checked && !formik.values.permissions.createSubscriptions && !formik.values.permissions.deleteSubscriptions && !formik.values.permissions.updateSubscriptions )){\r\n                formik.values.permissions.viewSubscriptions = checked;\r\n            }\r\n        }\r\n        else if(name === 'createMovies' || name === 'deleteMovies' || name === 'updateMovies'){\r\n            if(checked || (!checked && !formik.values.permissions.createMovies && !formik.values.permissions.deleteMovies && !formik.values.updateMovies )){\r\n                formik.values.permissions.viewMovies = checked;\r\n            }\r\n        }\r\n        else if(name === 'viewSubscriptions'){\r\n            if(!checked){\r\n                formik.values.permissions.createSubscriptions = false;\r\n                formik.values.permissions.deleteSubscriptions = false;\r\n                formik.values.permissions.updateSubscriptions = false;\r\n            }\r\n        }\r\n        else if(name === 'viewMovies'){\r\n            if(!checked){\r\n                formik.values.permissions.createMovies = false;\r\n                formik.values.permissions.deleteMovies = false;\r\n                formik.values.permissions.updateMovies = false;\r\n            }\r\n        }\r\n        */\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n             <UserHeader/>\r\n             {console.log('3333333333 ',user)}\r\n             {console.log('3333333333bbbb ',formik.values)}\r\n             {console.log('3333333333cccc ',formik.values)}\r\n            {msg}\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n            <label htmlFor='firstName'>First Name</label>\r\n                <input\r\n                    id='firstName'\r\n                    name='firstName'\r\n                    type='text'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.firstName}\r\n                />\r\n                {formik.touched.firstName && formik.errors.firstName ? (\r\n                    <div>{formik.errors.firstName}</div>\r\n                ) : null}\r\n\r\n                \r\n\r\n                <br/>\r\n\r\n                <label htmlFor='lastName'>Last Name</label>\r\n                <input\r\n                    id='lastName'\r\n                    name='lastName'\r\n                    type='text'\r\n                    onChange={inputTextHandleChange}\r\n                    value={formik.values.lastName}\r\n                />\r\n                {formik.touched.lastName && formik.errors.lastName ? (\r\n                    <div>{formik.errors.lastName}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='username'>UserName</label>\r\n                <input\r\n                    id='username'\r\n                    name='username'\r\n                    type='text'\r\n                    onChange={inputTextHandleChange}\r\n                    value={formik.values.username}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                    <div>{formik.errors.username}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n                <label htmlFor='sessionTimeOut'>Session Time Out</label>\r\n                <input\r\n                    id='sessionTimeOut'\r\n                    name='sessionTimeOut'\r\n                    type='text'\r\n                    onChange={inputTextHandleChange}\r\n                    value={formik.values.sessionTimeOut}\r\n                />\r\n                {formik.touched.sessionTimeOut && formik.errors.sessionTimeOut ? (\r\n                    <div>{formik.errors.sessionTimeOut}</div>\r\n                ) : null}\r\n                <br/>\r\n\r\n\r\n                Permission: <br/>\r\n                    \r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={user ? (user.permissions.includes('View Subscriptions') ? true : false) : (false)}  onChange={handleChange} id='viewSubscriptions' name='viewSubscriptions' size='small' style ={{\r\n                            color: 'white', \r\n                            }}\r\n                                />}\r\n                        label='View Subscriptions'\r\n                    />\r\n                </FormGroup>\r\n\r\n\r\n                <button type='submit'>Update</button>\r\n                <button><Link to=\"/users\">Cancel</Link></button>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default EditUserComp;\r\n",{"ruleId":"132","severity":1,"message":"133","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":55,"column":6,"nodeType":"138","endLine":55,"endColumn":8,"suggestions":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"144","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"145","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"146","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":10,"column":1,"nodeType":"149","endLine":10,"endColumn":31},{"ruleId":"132","severity":1,"message":"150","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"140","replacedBy":"151"},{"ruleId":"142","replacedBy":"152"},{"ruleId":"132","severity":1,"message":"153","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":41,"column":1,"nodeType":"149","endLine":41,"endColumn":76},{"ruleId":"132","severity":1,"message":"133","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"144","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":24},{"ruleId":"132","severity":1,"message":"154","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":29},{"ruleId":"132","severity":1,"message":"155","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":18},{"ruleId":"132","severity":1,"message":"156","line":12,"column":12,"nodeType":"134","messageId":"135","endLine":12,"endColumn":15},{"ruleId":"132","severity":1,"message":"157","line":12,"column":17,"nodeType":"134","messageId":"135","endLine":12,"endColumn":23},{"ruleId":"132","severity":1,"message":"158","line":12,"column":8,"nodeType":"134","messageId":"135","endLine":12,"endColumn":17},{"ruleId":"136","severity":1,"message":"159","line":40,"column":8,"nodeType":"138","endLine":40,"endColumn":10,"suggestions":"160"},{"ruleId":"132","severity":1,"message":"161","line":42,"column":11,"nodeType":"134","messageId":"135","endLine":42,"endColumn":18},{"ruleId":"132","severity":1,"message":"162","line":44,"column":11,"nodeType":"134","messageId":"135","endLine":44,"endColumn":19},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["163"],"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"'useEffect' is defined but never used.","'act' is defined but never used.","'movieUtil' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CompB' is defined but never used.",["164"],["165"],"'Movies' is defined but never used.","'computeHeadingLevel' is defined but never used.","'UserHeader' is defined but never used.","'msg' is assigned a value but never used.","'setMsg' is assigned a value but never used.","'usersUtil' is defined but never used.","React Hook useEffect has missing dependencies: 'formik.values', 'props.match.params.id', and 'users'. Either include them or remove the dependency array.",["166"],"'history' is assigned a value but never used.","'dispatch' is assigned a value but never used.",{"desc":"167","fix":"168"},"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [dispatch]",{"range":"171","text":"172"},"Update the dependencies array to be: [formik.values, props.match.params.id, users]",{"range":"173","text":"174"},[1605,1607],"[dispatch]",[1527,1529],"[formik.values, props.match.params.id, users]"]